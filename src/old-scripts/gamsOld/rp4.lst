GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      08/11/20 23:06:55 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  ** new matrix, for max recycled content in bags
   2   
   3  sets
   4          i substances /E1*E131/
   5          j activities /P1*P137/
   6          k impacts /I1*I2913/
   7      l MPindicators /MPI1*MPI10/
   8          losses(i) /E97/
   9          intermediates(i) /E1*E77,E78*E82,E84*E89,E91*E96,E107,E113,E115,E117*E122,E124*E128/
  10          homes(j) homesubsets /P87/
  11          supplies(i) bagsperhome /E84*E88,E127/
  12          sortedStuff(i) sortedbagsweights /E92*E96,E128/
  13          unextrudedAmnts(j) bagspermake /P77*P81,P132/
  14      bagAmnts(j) extruded plastic /P82*P86,P132/;
  15   
  16   
  17  set ij(i,j)/#i.#j/;
  18  set HCon(i,j) /#supplies.#homes/;
  19  set SWast(i,j) /#sortedStuff.P92/;
  20   
  21  parameter A(i,j),B(k,j),C(l,k);
  22   
GDXIN   /home/psegroup_1/Data/GAMS_Codes/LCD-Plastics/Workspace/Codes/techMatrix3.gdx
--- LOAD  A = 1:A
  26   
  27   
GDXIN   /home/psegroup_1/Data/GAMS_Codes/LCD-Plastics/Workspace/Codes/intMatrix3.gdx
--- LOAD  B = 1:B
  31  B(k,j) = round(B(k,j), 3);
  32   
GDXIN   /home/psegroup_1/Data/GAMS_Codes/LCD-Plastics/Workspace/Codes/CharacFactors3.gdx
--- LOAD  C = 1:C
  36  C(l,k) = round(C(l,k), 3);
  37   
  38  *A('E97','P91')=0.08825;
  39  *A('E97','P89')=-1.0968;
  40   
  41   
  42  *No Caps on Recycled Content
  43  *A('E79','P93')=0.55;
  44  *A('E78','P94')=0.55;
  45  *A('E80','P95')=0.55;
  46  *A('E81','P96')=0.45;
  47  *A('E97','P93')=0.026;
  48  *A('E97','P94')=0.026;
  49  *A('E97','P95')=0.025;
  50  *A('E97','P96')=0.018;
  51  *A('E79','P93')=1;
  52  *A('E78','P94')=1;
  53  *A('E80','P95')=1;
  54  *A('E81','P96')=1;
  55  *A('E117','P93')=0.0;
  56  *A('E118','P94')=0;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      08/11/20 23:06:55 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


  57  *A('E119','P95')=0.0;
  58  *A('E120','P96')=0.0;
  59  *A('E121','P96')=0.0;
  60  A('E127','P87')=-10;
  61  *A('E126','P134')=0;
  62   
  79   
  83   
  84  parameter
  85          bagVolumes(i) volume /E84 13.75, E85 [29.3*10], E86 [43.3*20], E87 [14*1], E88 14, E127 22.5/
  86          stockAttributes(bagAmnts) wt of bags;
  87   
  88  variable techMat(i,j);
  89  techMat.fx(i,j)$ (ij(i,j)-HCon(i,j)-SWast(i,j))=A(i,j);
  90  techMat.l(i,j)$(HCon(i,j)+SWast(i,j))=A(i,j);
  91  techMat.up(i,j)$HCon(i,j)=0;
  92   
      techMat.fx('E97','P92')=0;
      set makezerolosses(j) /P93*P97/;
      techMat.fx('E97',j)$makezerolosses(j)=0;
  98  positive variables
  99          s(j) scaling factors;
 100   
 101  variables
 102          f(i) final demand;
 103   
 104  *s.l(j)=0;
 105   
 106  *type of bags
 107  s.fx('P82')=0;
 108  s.fx('P83')=0;
 109  s.fx('P84')=0;
 110  s.fx('P85')=0;
 111  s.fx('P86')=0;
 112  *s.fx('P132')=0;
 113   
 114   
 115   
 116  *s.fx('P130')=0;
 117  *s.fx('P115')=0;
 118   
      equation litt;
      litt.. s('P88')=e=0.75*s('P87');
 123  equations
 124   
 125          processLCA fundamental equation
 126          zeroIntermediates(i)
 127          homeDemand(homes) home demand constraint
 128          stockEqns percent stock constraint;
 129   
 130   
 131   
 132      zeroIntermediates(i) $ intermediates(i).. f(i)=e=0;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      08/11/20 23:06:55 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 133          homeDemand(homes(j))..-3878=e=sum(i $ supplies(i), techMat(i,j)*s(j)*bagVolumes(i)*0.8);
 134          stockEqns.. sum(j$homes(j),s(j)*(1+techMat('E97',j)))=e=sum(j $ bagAmnts(j), s(j));
 135   
 136   
 137  *equation wasteall;
 138   
 139  *wasteall.. s('P88')=e=s('P87');
 140   
 141   
 142   
 143  *****************************Downstream equations**************************
 144  *sorting
 145  equations eqs1,eqs2,eqs3,eqs4,eqs5,eqs6,eqs7;
 146  techMat.up(i,'P92')$sortedStuff(i)=1;
 147  techMat.lo(i,'P92')$sortedStuff(i)=0;
 148  eqs1.. techMat('E92','P92')*sum(j$bagAmnts(j), s(j))=e=s('P82')*(1-techMat('E97','P92'));
 149  eqs2.. techMat('E93','P92')*sum(j$bagAmnts(j), s(j))=e=s('P83')*(1-techMat('E97','P92'));
 150  eqs3.. techMat('E94','P92')*sum(j$bagAmnts(j), s(j))=e=s('P84')*(1-techMat('E97','P92'));
 151  eqs4.. techMat('E95','P92')*sum(j$bagAmnts(j), s(j))=e=s('P85')*(1-techMat('E97','P92'));
 152  eqs5.. techMat('E96','P92')*sum(j$bagAmnts(j), s(j))=e=s('P86')*(1-techMat('E97','P92'));
 153  eqs6.. techMat('E128','P92')*sum(j$bagAmnts(j), s(j))=e=s('P132')*(1-techMat('E97','P92'));
 154  eqs7..907.18*s('P106')=e=5*s('P92')*(1-techMat('E97','P92'));
 155   
 156  variable pchoiceitems(i);
 157  equation eqnPchoiceitems(i);
 158  eqnPchoiceitems(i)$supplies(i).. pchoiceitems(i)=e=techMat(i,'P87')*s('P87');
 159   
 160   
 161  *normalized cost
 162  variable normalizedcostInput;
 163  equation costInput;
 164  set bagRatioProduction(i) /E92*E96,E128/;
 165  parameter offsetCostInput(i) /E92 [900*1],E93 [990*1],E94 [1080*1],E95 [1240*1],E96 2500,E128 [445*1]/;
 166  costInput.. normalizedcostinput=e=sum(i$bagRatioProduction(i),techMat(i,'P92')*offsetCostInput(i)/(0.99));
 167   
 168  variable productionCostResin;
 169  equation pdtcost;
 170  pdtcost.. productionCostResin=e=(normalizedCostInput*sum(j$unextrudedAmnts(j), s(j))/907.18)+sum(j$bagAmnts(j),s(j)*0.05);
 171   
 172   
 173  *landfilling
 174  set lfill_indices(j) /P98*P102,P136/;
 175  variable lossLandfill;
 176  equations eql1,eql2,eql3,eql4,eql5,eql6,eql7,loss_l;
 177  eql1.. s('P98')*sum(j$bagAmnts(j), s(j))=e=s('P82')*sum(j$lfill_indices(j), s(j));
 178  eql2.. s('P99')*sum(j$bagAmnts(j), s(j))=e=s('P83')*sum(j$lfill_indices(j), s(j));
 179  eql3.. s('P100')*sum(j$bagAmnts(j), s(j))=e=s('P84')*sum(j$lfill_indices(j), s(j));
 180  eql4.. s('P101')*sum(j$bagAmnts(j), s(j))=e=s('P85')*sum(j$lfill_indices(j), s(j));
 181  eql5.. s('P102')*sum(j$bagAmnts(j), s(j))=e=s('P86')*sum(j$lfill_indices(j), s(j));
 182  eql6.. s('P136')*sum(j$bagAmnts(j), s(j))=e=s('P132')*sum(j$lfill_indices(j), s(j));
 183  eql7.. s('P103')=e=5*sum(j$lfill_indices(j), s(j));
 184  loss_l.. lossLandfill=e=907.18*sum(j$lfill_indices(j),s(j));
 185   
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      08/11/20 23:06:55 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 186  s.fx('P81')=0;
 187  *incineration
 188  set ifill_indices(j) /P108*P112,P137/;
 189  parameter offsetCost(j) /P108 [900*1],P109 [990*1],P110 [1080*1],P111 [1240*1], P112 2500,P137 [445*1]/;
 190  set ifill_indices_new(j) /P118*P121,P137/;
 191  parameter offsetCost_new(j) /P118 [900*1],P119 [990*1],P120 [1080*1],P121 [1240*1], P137 [445*1]/;
 192  variable lossIncineration;
 193  equations eqi1,eqi2,eqi3,eqi4,eqi5,eqi6,eqi7,loss_i;
 194  eqi1.. s('P108')*sum(j$bagAmnts(j), s(j))=e=s('P82')*sum(j$ifill_indices(j), s(j));
 195  eqi2.. s('P109')*sum(j$bagAmnts(j), s(j))=e=s('P83')*sum(j$ifill_indices(j), s(j));
 196  eqi3.. s('P110')*sum(j$bagAmnts(j), s(j))=e=s('P84')*sum(j$ifill_indices(j), s(j));
 197  eqi4.. s('P111')*sum(j$bagAmnts(j), s(j))=e=s('P85')*sum(j$ifill_indices(j), s(j));
 198  eqi5.. s('P112')*sum(j$bagAmnts(j), s(j))=e=s('P86')*sum(j$ifill_indices(j), s(j));
 199  eqi6.. s('P137')*sum(j$bagAmnts(j), s(j))=e=s('P32')*sum(j$ifill_indices(j), s(j));
 200  eqi7.. s('P114')=e=5*sum(j$ifill_indices(j), s(j));
 201  *loss_i.. lossIncineration*sum(j$ifill_indices(j),offsetCost(j))=e=sum(j$ifill_indices(j),s(j)*907.18*(offsetCost(j)-((techMat('E107',j))*6.7/360)));
 202   
 203  Scalar elecCost /[10*1]/;
 204   
 205  loss_i.. lossIncineration=e=sum(j$ifill_indices(j),s(j)*907.18*(1-(((techMat('E107',j))*elecCost/360)/offsetCost(j))))+sum(j$ifill_indices_new(j),s(j)*907.18*(1-(((techMat('E107',j))*elecCost/360)/offsetCost_new(j))));
 206   
 207  *biofuel
 208  variable lossBioFuel;
 209  scalar biofuelCost /[0.041*1]/;
 210  equation loss_b;
 211  set bio_new(j) /P122*P125/;
 212  loss_b.. lossBioFuel*normalizedCostInput=e=(((-1*s('P115')/techMat('E91','P115')+sum(j$bio_new(j),s(j)))*normalizedCostInput)-(s('P116')*biofuelCost));
 213  lossBioFuel.lo=0;
 214   
 215   
 216  *composting
 217  variable costBenifitCompost,cbc2, lossCompost;
 218  equation cost_c,cc2,loss_c;
 219  scalar compostCost /[0.030183*1]/;
 220  cost_c.. costBenifitCompost=e=(s('P117')+s('P104')+s('P105'))*907.18*compostCost;
 221  cc2.. cbc2=e=s('P104')*offsetCostInput('E95')+s('P105')*offsetCostInput('E96');
 222  lossCompost.lo=0;
 223  loss_c.. lossCompost*((s('P117')+s('P104'))*offsetCostInput('E95')+s('P105')*offsetCostInput('E96'))=e=((s('P117')+s('P104'))+s('P105'))*907.18*(((s('P117')+s('P104'))*offsetCostInput('E95')+s('P105')*offsetCostInput('E96'))-costBenifitCompost);
 224  *loss_c.. lossCompost=e=(s('P105')+s('P104'))*907.18;
 225   
 226  *s.fx('P113')=0;
 227  s.fx('P89')=0;
 228  *s.fx('P115')=0;
 229  *s.fx('P92')=0;
 230  *s.fx('P85')=0;
 231  *s.fx('P86')=0;
 232  processLCA(i).. f(i)=e=sum(j,techMat(i,j)*s(j));
 233   
 234  **************************************Objectives************************************************
 235   
 236  variables DoC,Cost;
 237  equations DoC_obj,Cost_obj;
 238          DoC.lo=0;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      08/11/20 23:06:55 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 239  *       DoC.up=1;
 240   
 241  set inputs(j) /P1,P2,P7,P12,P14,P17,P18,P21,P26,P39,P42,P49,P52,P57,P58,P59, P76/;
 242  parameter cost_inputs(j) /P1 0.0496,P2 0.01624,P7 0.1766,P12 0.559977,P14 0.12996,P17 0.067,P18 0.37725,P21 0.067,P26 0.0287605,P39 0.1766,P42 110.2293,P49 0.12,P52 80,P57 0.13227,P58 0.022046,P59 0.020923,P76 0.000000030442/;
 243   
 244          Cost_obj.. Cost =e=sum(j$inputs(j), s(j)*cost_inputs(j))-costBenifitCompost;
 245   
 246  variable CostBag;
 247  equation Cost_obj1;
 248  parameter cost_bags(i) /E84 0.11, E85 0.18, E86 0.6, E87 0.14, E88 0.1/;
 249  Cost_obj1.. CostBag=e=sum(i$supplies(i),-1*pchoiceitems(i)*cost_bags(i));
 250   
 251   
 252   
 253   
 254  variable costRecycled;
 255  equation costRecycled1;
 256  costRecycled1.. costRecycled*0.90718=e=A('E81','P96')*s('P96')*[1.24*1]+A('E80','P95')*s('P95')*[1.08*1]+A('E79','P93')*s('P93')*[0.9*1]+A('E78','P94')*s('P94')*[0.99*1]+A('E129','P135')*s('P135')*[0.445*1];
 257   
 258  variable costIn,costPy,costCl,costLu;
 259  equation costIn1,costPy1,costCl1,costLu1;
 260   
 261  costIn1.. costIn=e=sum(j$ifill_indices(j),s(j)*techMat('E107',j)*elecCost/360)+sum(j$ifill_indices_new(j),s(j)*techMat('E107',j)*elecCost/360);
 262  costPy1.. costPy=e=s('P116')*biofuelCost;
 263  scalar clinkerCost /[34*1]/;
 264  scalar lumberCost /[0.036*1]/;
 265  costCl1.. costCl=e=s('P129')*clinkerCost/1000;
 266  *clinker 34$/ton, lumber=45$/1000 board feet i.e. 2.35 m3 and 320 kg/m3 density
 267  costLu1.. costLu=e=s('P130')*lumberCost;
 268  *pyrolysis 0.044 kg biofuel generated, 7.3 lb/gal density, 3$/gal
 269  *degreeofcircularity
 270  *DoC_obj.. DoC*sum(j$unextrudedAmnts(j), s(j))=e=sum(j$unextrudedAmnts(j), s(j))-(f('E97')+lossLandfill);
 271  *DoC_obj.. DoC*sum(j$bagAmnts(j), s(j))=e=sum(j$bagAmnts(j), s(j))-(f('E97')+lossLandfill+lossIncineration+lossBioFuel+lossCompost+costCl*s('P129')+costLu*s('P130'));
 272  DoC_obj.. DoC*(productionCostResin+costRecycled) =e=costIn +costRecycled+costBenifitCompost+costCl+costLu+costPy;
 273  *DoC_obj.. DoC*Cost =e=costIn +costRecycled+costBenifitCompost+costPy+costCl+costLu;
 274   
 275   
 276   
      equation dumm;
      variable dum;
      dumm.. dum=e=10;
      	Model ToyProblem /ALL/;
      	Option NLP=BARON;
      	Solve ToyProblem using NLP maximizing dum; 
 285   
 286  variable pchoicemass(j);
 287  equation totmassproduced(j);
 288  variable totpdtmass;
 289  equation eqtotpdtmass;
 290  eqtotpdtmass.. totpdtmass=e=sum(j$bagAmnts(j),s(j));
 291  totmassproduced(j)$bagAmnts(j).. pchoicemass(j)*totpdtmass=e=s(j);
 292   
 293  set wasteMgmt /'Reprocess', 'Pyrolysis', 'Landfill', 'Incineration'/;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      08/11/20 23:06:55 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 294  variable wasteMgmtValues (wasteMgmt);
 295  equations eqw1,eqw2,eqw3,eqw4;
 296  eqw1.. wasteMgmtValues('Reprocess')=e=s('P92')*(1-techMat('E97','p92'));
 297  eqw2.. wasteMgmtValues('Pyrolysis')=e=(s('P115')*((-1)*techMat('E91','P115')-techMat('E97','P115')));
 298  eqw3.. wasteMgmtValues('Landfill')=e=(sum(j$lfill_indices(j), s(j)*(907.18-techMat('E97',j))))+(s('P113')*907.18)-(s('P114')*45);
 299  eqw4.. wasteMgmtValues('Incineration')=e=sum(j$ifill_indices(j), s(j)*(907.18-techMat('E97',j)))+sum(j$ifill_indices_new(j), s(j)*(907.18-techMat('E97',j)));
 300   
 301   
 302  variable g(k);
 303  equation impactValues(k);
 304  impactValues(k).. g(k)=e=sum(j,B(k,j)*s(j));
 305  variable mp_indicators(l);
 306  equation eqMPI(l);
 307  eqMPI(l).. mp_indicators(l)=e=sum(k,C(l,k)*g(k));
 308   
 309  variable gwp;
 310  equation eq_gwp;
 311  eq_gwp.. gwp=e=mp_indicators('MPI4');
 312  *$if not set constrVal $set constrVal=0;
 313  *equation constrainttrial;
 314  *constrainttrial.. wasteMgMtValues('Reprocess')=l=0.5;
 315   
 316  positive variable slack1,slack2;
 317   
 318  parameter gwpC,costC,docC;
 320  gwpC=-0.2447;
 321  *slack1.lo=-1*gwpC*0;
 322  *slack1.up=gwpC*0;
 323  equation addCons1;
 324  addCons1$(gwpC>0).. gwp+slack1=e=gwpC;
 326  costC=1.8227;
 327  *slack2.lo=-1*costC*0;
 328  *slack2.up=costC*0;
 329  equation addCons2;
 330  addCons2$(costC>0).. cost+slack2=e=costC;
 331   
 333  docC=-1;;
 334  equation addCons3;
 335  addCons3$(docC>0).. DoC=g=docC;
 336   
 337   
 338  *Ellen Mcarthur Constraints
 339   
 340  *equation elmc1;
 341  *equation elmc2;
 342  *equations elmc3;
 343  *equations elmc4;
 344  *elmc1.. sum(j$ifill_indices(j),s(j)*907.18)=g=0.14*(s('P90')+s('P91'));
 345  *elmc2.. sum(j$lfill_indices(j),s(j)*907.18)=e=0.5*(s('P90')+s('P91'));
 346  *elmc3.. s('P92')=e=0.14*(s('P90')+s('P91'));
 347  *elmc4.. s('P115')=e=0.01*(s('P90')+s('P91'));
 348   
 349  equation eps1;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      08/11/20 23:06:55 Page 7
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 350  variable epsObj;
 351  eps1.. epsObj=e=DoC+eps*(slack1+slack2);
 352   
 353      Model ToyProblem /ALL/;
 354          Option NLP=BARON;
 359          ToyProblem.OptFile=1;
 360  *       Option limrow=120;
 361  *    Option resLim=5000;
 362  *    Option optcr=0.1;
 363  parameter zD,zG,zC;
 364  *******************************************Objectives**********************************************
 365  DoC.lo=0;
 366  DoC.up=2;
 367  If(docC<0, Solve ToyProblem Using NLP maximizing DoC;
 368  zD = DoC.l;
 369  DoC.lo=zD;
 370  zG = gwp.l;
 371  gwp.l=zG;
 372  *Solve ToyProblem Using NLP minimizing gwp;
 373  zG = gwp.l;
 374  gwp.up=zG;
 375  *Solve ToyProblem Using NLP minimizing Cost;
 376  zC=cost.l;
 377  cost.up=zC;
 378   
 379   
 380  Elseif (gwpC<0), Solve ToyProblem Using NLP minimizing gwp;
 381  zG = gwp.l;
 382  gwp.up=zG;
 383  *Solve ToyProblem Using NLP minimizing Cost;
 384  zC=Cost.l;
 385  Cost.up=zC;
 386  *Solve ToyProblem Using NLP maximizing DoC;
 387  zD = DoC.l;
 388  DoC.fx=zD;
 389   
 390  else  Solve ToyProblem Using NLP minimizing Cost;
 391  zC = Cost.l;
 392  Cost.up=zC;
 393  *Solve ToyProblem Using NLP maximizing DoC;
 394  zD = DoC.l;
 395  DoC.lo=zD;
 396  *Solve ToyProblem Using NLP minimizing gwp;
 397  zG=gwp.l;
 398  gwp.fx=zG;
 399  );
 400   
       
      $GDXIN intMatrix1.gdx
      $LOAD B
      $GDXIN
      B(k,j) = round(B(k,j), 4);
       
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      08/11/20 23:06:55 Page 8
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


      $GDXIN CharacFactors.gdx
      $LOAD C
      $GDXIN
      C(l,k) = round(C(l,k), 4);
       
       
      variable g(k);
      *equation impactValues(k);
      *impactValues(k).. g(k)=e=sum(j,B(k,j)*s(j));
      g.fx(k)=sum(j,B(k,j)*s.l(j));
      variable mp_indicators(l);
      *equation eqMPI(l);
      mp_indicators.l(l)=0.05;
      mp_indicators.fx(l)=sum(k,C(l,k)*g.l(k));
 423   
 424  Display pchoiceitems.l,pchoicemass.l,wasteMgmtValues.l;
 425  Display DoC.l;
 426  Display Cost.l;
 427  Display s.l;
 428  Display g.l;
 429  Display cbc2.l,costBenifitCompost.l,lossCompost.l,lossIncineration.l,lossBiofuel.l,lossLandfill.l;
 430  Display productionCostResin.l;
 431  Display mp_indicators.l;
 432   
 434   
 435  File pareto /paretov.txt/;
 436  pareto.ap=1;
 437  pareto.nd=4;
 438  put pareto"";
 439  put Cost.l",";
 440  put DoC.l",";
 441  put totpdtmass.l",";
 442  loop(j$bagAmnts(j),put s.l(j)",");
 443  loop(wasteMgmt,put wasteMgmtValues.l(wasteMgmt)",");
 444  *loop(l,put mp_indicators.l(l)",");
 445  put mp_indicators.l('MPI4')"";
 446  put /;
 447   
 448  set from /'HDPE','LDPE','PP','PLA','Paper','Households','Curbside Collection','Dropoff','Segregation','rHDPE','rLDPE','rPP','rPLA','rPaper','Compost','Landfill','Incineration','Pyrolysis','Clinker','Lumber','Losses'/;
 449  *set to /HDPE,LDPE,PP,PLA,Paper,Households,Curbside Collection,Dropoff,Segregation,rHDPE,rLDPE,rPP,rPLA,rPaper,Compost,Landfill,Incineration,Pyrolysis,Losses/;
 450  set to /'HDPE','LDPE','PP','PLA','Paper','Households','Curbside Collection','Dropoff','Segregation','rHDPE','rLDPE','rPP','rPLA','rPaper','Compost','Landfill','Incineration','Pyrolysis','Clinker','Lumber','Losses'/;
 451  variable cD(from,to);
 452  cd.l(from,to)=0.0000;
 453  cd.fx('HDPE','Households')=s.l('P82');
 454  cd.fx('LDPE','Households')=s.l('P83');
 455  cd.fx('PP','Households')=s.l('P84');
 456  cd.fx('PLA','Households')=s.l('P85');
 457  cd.fx('Paper','Households')=s.l('P132');
 458  cd.fx('Households','losses')=s.l('P87')*techMat.l('E97','P87')+s.l('P88');
 459  cd.fx('Households','Curbside Collection')=-1*s.l('P90')*techMat.l('E89','P90');
 460  cd.fx('Households','Dropoff')=s.l('P91')*(-1)*techMat.l('E89','P91');
 461  cd.fx('Curbside Collection','losses')=s.l('P90')*techMat.l('E97','P90');
 462  cd.fx('Dropoff','losses')=s.l('P91')*techMat.l('E97','P91');
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      08/11/20 23:06:55 Page 9
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 463  cd.fx('Curbside Collection','Segregation')=s.l('P90')*s.l('P92')/(s.l('P90')+s.l('P91'));
 464  cd.fx('Dropoff','Segregation')=s.l('P91')*s.l('P92')/(s.l('P90')+s.l('P91'));
 465  set repr_lfill(j) /P92*P97/;
 466  cd.fx('Segregation','Landfill')=s.l('P92')*techMat.l('E97','P92')+sum(j$repr_lfill(j),s.l(j)*techMat.l('E113',j));
 467   
 468  cd.fx('Curbside Collection','Landfill')=s.l('P90')*(sum(j$lfill_indices(j), s.l(j)*(907.18-techMat.l('E97',j))))/(s.l('P90')+s.l('P91'));
 469  cd.fx('Dropoff','Landfill')=s.l('P91')*(sum(j$lfill_indices(j), s.l(j)*(907.18-techMat.l('E97',j))))/(s.l('P90')+s.l('P91'));
 470   
 471  cd.fx('Curbside Collection','Incineration')=s.l('P90')*sum(j$ifill_indices(j), s.l(j)*(907.18-techMat.l('E97',j)))/(s.l('P90')+s.l('P91'));
 472  cd.fx('Dropoff','Incineration')=s.l('P91')*sum(j$ifill_indices(j), s.l(j)*(907.18-techMat.l('E97',j)))/(s.l('P90')+s.l('P91'));
 473  cd.fx('Incineration','Landfill')=sum(j$ifill_indices(j),s.l(j)*techMat.l('E113',j));
 474  cd.fx('Incineration','losses')=sum(j$ifill_indices(j),s.l(j)*techMat.l('E97',j));
 475   
 476  cd.fx('Curbside Collection','Pyrolysis')=s.l('P90')*(s.l('P115')*((-1)*techMat.l('E91','P115')-techMat.l('E97','P115')))/(s.l('P90')+s.l('P91'));
 477  cd.fx('Dropoff','Pyrolysis')=s.l('P91')*(s.l('P115')*((-1)*techMat.l('E91','P115')-techMat.l('E97','P115')))/(s.l('P90')+s.l('P91'));
 478  cd.fx('Pyrolysis','losses')=s.l('P115')*techMat.l('E97','P115');
 479   
 480  cd.fx('Segregation','rHDPE')=s.l('P93');
 481  cd.fx('Segregation','rLDPE')=s.l('P94');
 482  cd.fx('Segregation','rPP')=s.l('P95');
 483  cd.fx('Segregation','rPLA')=s.l('P96');
 484  cd.fx('Segregation','rPaper')=s.l('P135');
 485  cd.fx('Segregation','Compost')=907.18*(s.l('P117')+s.l('P104')+s.l('P105'));
 486  cd.fx('Segregation','Incineration')=sum(j$ifill_indices(j), s.l(j)*(907.18-techMat.l('E97',j)));
 487   
 488   
 489   
 490  cd.fx('rHDPE','HDPE')=s.l('P93')*techMat.l('E79','P93');
 491  cd.fx('rHDPE','Incineration')=s.l('P118')*(907.18-techMat.l('E79','P118'));
 492  cd.fx('rHDPE','Pyrolysis')=s.l('P122');
 493  cd.fx('rHDPE','Clinker')$(s.l('P129')>0 or s.l('P130')>0)=s.l('P126')*(s.l('P129')/(s.l('P129')+s.l('P130')));
 494  cd.fx('rHDPE','Lumber')$(s.l('P129')>0 or s.l('P130')>0)=s.l('P126')*(s.l('P130')/(s.l('P129')+s.l('P130')));
 495  cd.fx('rLDPE','LDPE')=s.l('P94')*techMat.l('E78','P94');
 496  cd.fx('rLDPE','Incineration')=s.l('P119')*(907.18-techMat.l('E79','P119'));
 497  cd.fx('rLDPE','Pyrolysis')=s.l('P123');
 498  cd.fx('rLDPE','Clinker')$(s.l('P129')>0 or s.l('P130')>0)=s.l('P127')*(s.l('P129')/(s.l('P129')+s.l('P130')));
 499  cd.fx('rLDPE','Lumber')$(s.l('P129')>0 or s.l('P130')>0)=s.l('P127')*(s.l('P130')/(s.l('P129')+s.l('P130')));
 500  cd.fx('rPP','PP')=s.l('P95')*techMat.l('E80','P95');
 501  cd.fx('rPP','Incineration')=s.l('P120')*(907.18-techMat.l('E79','P118'));
 502  cd.fx('rPP','Pyrolysis')=s.l('P124');
 503  cd.fx('rPP','Clinker')$(s.l('P129')>0 or s.l('P130')>0)=s.l('P128')*(s.l('P129')/(s.l('P129')+s.l('P130')));
 504  cd.fx('rPP','Lumber')$(s.l('P129')>0 or s.l('P130')>0)=s.l('P128')*(s.l('P130')/(s.l('P129')+s.l('P130')));
 505  cd.fx('rPLA','PLA')=s.l('P96')*techMat.l('E81','P96');
 506  cd.fx('rPLA','Incineration')=s.l('P121')*(907.18-techMat.l('E79','P118'));
 507  cd.fx('rPLA','Pyrolysis')=s.l('P125');
 508  cd.fx('rPLA','Compost')=s.l('P117')*(907.18);
 509  cd.fx('rPaper','Paper')=s.l('P135')*techMat.l('E125','P135');
 510  cd.fx('rHDPE','Losses')=s.l('P93')*techMat.l('E97','P93');
 511  cd.fx('rLDPE','Losses')=s.l('P94')*techMat.l('E97','P94');
 512  cd.fx('rPP','Losses')=s.l('P95')*techMat.l('E97','P95');
 513  cd.fx('rPLA','Losses')=s.l('P96')*techMat.l('E97','P96');
 514  cd.fx('rPaper','Losses')=s.l('P135')*techMat.l('E97','P135');
 515  *cd.fx('Segregation','Landfill')=sum(j$repr_lfill(j),s.l(j)*techMat.l('E113',j));
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 10
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 516   
 517  cd.fx(from,to) = round(cd.l(from,to), 4);
 518  parameter recyclevalLDPE,recyclevalPLA,recyclevalPP,recyclevalHDPE;
 519  recyclevalPLA$(s.l('P80')>0)=A('E81','P96')*s.l('P96')/(s.l('P80')+A('E81','P96')*s.l('P96'));
 520  recyclevalPP$(s.l('P79')>0)=A('E80','P95')*s.l('P95')/(s.l('P79')+A('E80','P95')*s.l('P95'));
 521  recyclevalHDPE$(s.l('P77')>0)=A('E79','P93')*s.l('P93')/(s.l('P77')+A('E79','P93')*s.l('P93'));
 522  recyclevalLDPE$(s.l('P78')>0)=A('E78','P94')*s.l('P94')/(s.l('P78')+A('E78','P94')*s.l('P94'));
 523  Display recyclevalLDPE,recyclevalHDPE,recyclevalPP,recyclevalPLA;
 524  *chordDiag.nd=4;
 525  *put chordDiag"";
 526  *loop(to, put to.tl);
 527  *loop(from, loop(to, put cd.l(from,to)); put /;);
 528  *put /;
 529  *Display from;
 530   
 531  execute_unload 'Sankey_%fileS%.gdx', cD,from;
 532  execute 'gdxdump Sankey_%fileS%.gdx output=Sankey_%fileS%.csv symb=cD format=csv'
 533  execute 'rm Sankey_%fileS%.gdx'
 534  execute 'mv Sankey_%fileS%.csv ./v/'
 535  execute_unload 'Sankey_%fileS1%.gdx', s;
 536  execute 'gdxdump Sankey_%fileS1%.gdx output=Sankey_%fileS1%.csv symb=s format=csv'
 537  execute 'rm Sankey_%fileS1%.gdx'
 538  execute 'mv Sankey_%fileS1%.csv ./v/'
 539   
 540  *execute 'cd ~/Data/GAMS_Codes/LCD-Plastics/Graphics/Sankey/'
 541  *execute 'python finalJSConstructor.py Sankey_%fileS%.csv'
 542  Display cd.l;
 543  *execute_unload "pareto%filename%.gdx", techMat,s,f,Cost,DoC,productionCostResin, pchoiceitems, pchoicemass, wasteMgmtValues,mp_indicators;
 544  *execute_unload 'Find.gdx', techMat,s,f,Cost,DoC,productionCostResin, pchoiceitems, pchoicemass, wasteMgmtValues,mp_indicators;
 545  *execute 'gdxdump Find.gdx output=Find.csv symb=techMat format=csv'
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 11
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  /home/psegroup_1/Data/GAMS_Codes/LCD-Plastics/Workspace/Codes/rp4.gms
     2       23 GDXIN          1      23  /home/psegroup_1/Data/GAMS_Codes/LCD-Plastics/Workspace/Codes/techMatrix3.gdx
     3       28 GDXIN          1      28  /home/psegroup_1/Data/GAMS_Codes/LCD-Plastics/Workspace/Codes/intMatrix3.gdx
     4       33 GDXIN          1      33  /home/psegroup_1/Data/GAMS_Codes/LCD-Plastics/Workspace/Codes/CharacFactors3.gdx


COMPILATION TIME     =        0.007 SECONDS      4 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 12
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 367


---- processLCA  =E=  fundamental equation

processLCA(E1)..  (0)*techMat(E1,P1) + (0)*techMat(E1,P2) + (0)*techMat(E1,P3) + (0)*techMat(E1,P4) + (0)*techMat(E1,P5) + (0)*techMat(E1,P6) + (0)*techMat(E1,P7) + (0)*techMat(E1,P8) + (0)*techMat(E1,P9) + (0)*techMat(E1,P10) + (0)*techMat(E1,P11)
     
      + (0)*techMat(E1,P12) + (0)*techMat(E1,P13) + (0)*techMat(E1,P14) + (0)*techMat(E1,P15) + (0)*techMat(E1,P16) + (0)*techMat(E1,P17) + (0)*techMat(E1,P18) + (0)*techMat(E1,P19) + (0)*techMat(E1,P20) + (0)*techMat(E1,P21) + (0)*techMat(E1,P22)
     
      + (0)*techMat(E1,P23) + (0)*techMat(E1,P24) + (0)*techMat(E1,P25) + (0)*techMat(E1,P26) + (0)*techMat(E1,P27) + (0)*techMat(E1,P28) + (0)*techMat(E1,P29) + (0)*techMat(E1,P30) + (0)*techMat(E1,P31) + (0)*techMat(E1,P32) + (0)*techMat(E1,P33)
     
      + (0)*techMat(E1,P34) + (0)*techMat(E1,P35) + (0)*techMat(E1,P36) + (0)*techMat(E1,P37) + (0)*techMat(E1,P38) + (0)*techMat(E1,P39) + (0)*techMat(E1,P40) + (0)*techMat(E1,P41) + (0)*techMat(E1,P42) + (0)*techMat(E1,P43) + (0)*techMat(E1,P44)
     
      + (0)*techMat(E1,P45) + (0)*techMat(E1,P46) + (0)*techMat(E1,P47) + (0)*techMat(E1,P48) + (0)*techMat(E1,P49) + (0)*techMat(E1,P50) + (0)*techMat(E1,P51) + (0)*techMat(E1,P52) + (0)*techMat(E1,P53) + (0)*techMat(E1,P54) + (0)*techMat(E1,P55)
     
      + (0)*techMat(E1,P56) + (0)*techMat(E1,P57) + (0)*techMat(E1,P58) + (0)*techMat(E1,P59) + (0)*techMat(E1,P60) + (0)*techMat(E1,P61) + (0)*techMat(E1,P62) + (0)*techMat(E1,P63) + (0)*techMat(E1,P64) + (0)*techMat(E1,P65) + (0)*techMat(E1,P66)
     
      + (0)*techMat(E1,P67) + (0)*techMat(E1,P68) + (0)*techMat(E1,P69) + (0)*techMat(E1,P70) + (0)*techMat(E1,P71) + (0)*techMat(E1,P72) + (0)*techMat(E1,P73) + (0)*techMat(E1,P74) + (0)*techMat(E1,P75) + (0)*techMat(E1,P76) + (0)*techMat(E1,P77)
     
      + (0)*techMat(E1,P78) + (0)*techMat(E1,P79) + (0)*techMat(E1,P80) + (0)*techMat(E1,P81) + (0)*techMat(E1,P82) + (0)*techMat(E1,P83) + (0)*techMat(E1,P84) + (0)*techMat(E1,P85) + (0)*techMat(E1,P86) + (0)*techMat(E1,P87) + (0)*techMat(E1,P88)
     
      + (0)*techMat(E1,P89) + (0)*techMat(E1,P90) + (0)*techMat(E1,P91) + (0)*techMat(E1,P92) + (0)*techMat(E1,P93) + (0)*techMat(E1,P94) + (0)*techMat(E1,P95) + (0)*techMat(E1,P96) + (0)*techMat(E1,P97) + (0)*techMat(E1,P98) + (0)*techMat(E1,P99)
     
      + (0)*techMat(E1,P100) + (0)*techMat(E1,P101) + (0)*techMat(E1,P102) + (0)*techMat(E1,P103) + (0)*techMat(E1,P104) + (0)*techMat(E1,P105) + (0)*techMat(E1,P106) + (0)*techMat(E1,P107) + (0)*techMat(E1,P108) + (0)*techMat(E1,P109)
     
      + (0)*techMat(E1,P110) + (0)*techMat(E1,P111) + (0)*techMat(E1,P112) + (0)*techMat(E1,P113) + (0)*techMat(E1,P114) + (0)*techMat(E1,P115) + (0)*techMat(E1,P116) + (0)*techMat(E1,P117) + (0)*techMat(E1,P118) + (0)*techMat(E1,P119)
     
      + (0)*techMat(E1,P120) + (0)*techMat(E1,P121) + (0)*techMat(E1,P122) + (0)*techMat(E1,P123) + (0)*techMat(E1,P124) + (0)*techMat(E1,P125) + (0)*techMat(E1,P126) + (0)*techMat(E1,P127) + (0)*techMat(E1,P128) + (0)*techMat(E1,P129)
     
      + (0)*techMat(E1,P130) + (0)*techMat(E1,P131) + (0)*techMat(E1,P132) + (0)*techMat(E1,P133) + (0)*techMat(E1,P134) + (0)*techMat(E1,P135) + (0)*techMat(E1,P136) + (0)*techMat(E1,P137) - (1)*s(P1) + (0)*s(P2) + (0)*s(P3) + (0)*s(P4) + (0)*s(P5)
     
      + (0)*s(P6) + (0)*s(P7) + (0)*s(P8) + (0)*s(P9) + (1)*s(P10) + (0)*s(P11) + (0)*s(P12) + (0)*s(P13) + (0)*s(P14) + (0)*s(P15) + (0)*s(P16) + (0)*s(P17) + (0)*s(P18) + (0)*s(P19) + (0)*s(P20) + (0)*s(P21) + (0)*s(P22) + (0)*s(P23) + (0)*s(P24)
     
      + (0)*s(P25) + (0)*s(P26) + (0)*s(P27) + (0)*s(P28) + (0)*s(P29) + (0)*s(P30) + (0)*s(P31) + (0)*s(P32) + (0)*s(P33) + (0)*s(P34) + (0)*s(P35) + (0)*s(P36) + (0)*s(P37) + (0)*s(P38) + (0)*s(P39) + (0)*s(P40) + (0)*s(P41) + (0)*s(P42) + (0)*s(P43)
     
      + (0)*s(P44) + (0)*s(P45) + (0)*s(P46) + (0)*s(P47) + (0)*s(P48) + (0)*s(P49) + (0)*s(P50) + (0)*s(P51) + (0)*s(P52) + (0)*s(P53) + (0)*s(P54) + (0)*s(P55) + (0)*s(P56) + (0)*s(P57) + (0)*s(P58) + (0)*s(P59) + (0)*s(P60) + (0)*s(P61) + (0)*s(P62)
     
      + (0)*s(P63) + (0)*s(P64) + (0)*s(P65) + (0)*s(P66) + (0)*s(P67) + (0.44186)*s(P68) + (0)*s(P69) + (0)*s(P70) + (0)*s(P71) + (0)*s(P72) + (0)*s(P73) + (0)*s(P74) + (0)*s(P75) + (0)*s(P76) + (0)*s(P77) + (0)*s(P78) + (0)*s(P79) + (0)*s(P80)
     
      + (0)*s(P81) + (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P87) + (0)*s(P88) + (0)*s(P89) + (0)*s(P90) + (0)*s(P91) + (0)*s(P92) + (0)*s(P93) + (0)*s(P94) + (0)*s(P95) + (0)*s(P96) + (0)*s(P97) + (0)*s(P98) + (0)*s(P99)
     
      + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P103) + (0)*s(P104) + (0)*s(P105) + (0)*s(P106) + (0)*s(P107) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P113) + (0)*s(P114) + (0)*s(P115) + (0)*s(P116)
     
      + (0)*s(P117) + (0)*s(P118) + (0)*s(P119) + (0)*s(P120) + (0)*s(P121) + (0)*s(P122) + (0)*s(P123) + (0)*s(P124) + (0)*s(P125) + (0)*s(P126) + (0)*s(P127) + (0)*s(P128) + (0)*s(P129) + (0)*s(P130) + (0)*s(P131) + (0)*s(P132) + (0)*s(P133)
     
      + (0)*s(P134) + (0)*s(P135) + (0)*s(P136) + (0)*s(P137) + f(E1) =E= 0 ; (LHS = 0)
     
processLCA(E2)..  (0)*techMat(E2,P1) + (0)*techMat(E2,P2) + (0)*techMat(E2,P3) + (0)*techMat(E2,P4) + (0)*techMat(E2,P5) + (0)*techMat(E2,P6) + (0)*techMat(E2,P7) + (0)*techMat(E2,P8) + (0)*techMat(E2,P9) + (0)*techMat(E2,P10) + (0)*techMat(E2,P11)
     
      + (0)*techMat(E2,P12) + (0)*techMat(E2,P13) + (0)*techMat(E2,P14) + (0)*techMat(E2,P15) + (0)*techMat(E2,P16) + (0)*techMat(E2,P17) + (0)*techMat(E2,P18) + (0)*techMat(E2,P19) + (0)*techMat(E2,P20) + (0)*techMat(E2,P21) + (0)*techMat(E2,P22)
     
      + (0)*techMat(E2,P23) + (0)*techMat(E2,P24) + (0)*techMat(E2,P25) + (0)*techMat(E2,P26) + (0)*techMat(E2,P27) + (0)*techMat(E2,P28) + (0)*techMat(E2,P29) + (0)*techMat(E2,P30) + (0)*techMat(E2,P31) + (0)*techMat(E2,P32) + (0)*techMat(E2,P33)
     
      + (0)*techMat(E2,P34) + (0)*techMat(E2,P35) + (0)*techMat(E2,P36) + (0)*techMat(E2,P37) + (0)*techMat(E2,P38) + (0)*techMat(E2,P39) + (0)*techMat(E2,P40) + (0)*techMat(E2,P41) + (0)*techMat(E2,P42) + (0)*techMat(E2,P43) + (0)*techMat(E2,P44)
     
      + (0)*techMat(E2,P45) + (0)*techMat(E2,P46) + (0)*techMat(E2,P47) + (0)*techMat(E2,P48) + (0)*techMat(E2,P49) + (0)*techMat(E2,P50) + (0)*techMat(E2,P51) + (0)*techMat(E2,P52) + (0)*techMat(E2,P53) + (0)*techMat(E2,P54) + (0)*techMat(E2,P55)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 13
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 367


     processLCA  =E=  fundamental equation     
     
      + (0)*techMat(E2,P56) + (0)*techMat(E2,P57) + (0)*techMat(E2,P58) + (0)*techMat(E2,P59) + (0)*techMat(E2,P60) + (0)*techMat(E2,P61) + (0)*techMat(E2,P62) + (0)*techMat(E2,P63) + (0)*techMat(E2,P64) + (0)*techMat(E2,P65) + (0)*techMat(E2,P66)
     
      + (0)*techMat(E2,P67) + (0)*techMat(E2,P68) + (0)*techMat(E2,P69) + (0)*techMat(E2,P70) + (0)*techMat(E2,P71) + (0)*techMat(E2,P72) + (0)*techMat(E2,P73) + (0)*techMat(E2,P74) + (0)*techMat(E2,P75) + (0)*techMat(E2,P76) + (0)*techMat(E2,P77)
     
      + (0)*techMat(E2,P78) + (0)*techMat(E2,P79) + (0)*techMat(E2,P80) + (0)*techMat(E2,P81) + (0)*techMat(E2,P82) + (0)*techMat(E2,P83) + (0)*techMat(E2,P84) + (0)*techMat(E2,P85) + (0)*techMat(E2,P86) + (0)*techMat(E2,P87) + (0)*techMat(E2,P88)
     
      + (0)*techMat(E2,P89) + (0)*techMat(E2,P90) + (0)*techMat(E2,P91) + (0)*techMat(E2,P92) + (0)*techMat(E2,P93) + (0)*techMat(E2,P94) + (0)*techMat(E2,P95) + (0)*techMat(E2,P96) + (0)*techMat(E2,P97) + (0)*techMat(E2,P98) + (0)*techMat(E2,P99)
     
      + (0)*techMat(E2,P100) + (0)*techMat(E2,P101) + (0)*techMat(E2,P102) + (0)*techMat(E2,P103) + (0)*techMat(E2,P104) + (0)*techMat(E2,P105) + (0)*techMat(E2,P106) + (0)*techMat(E2,P107) + (0)*techMat(E2,P108) + (0)*techMat(E2,P109)
     
      + (0)*techMat(E2,P110) + (0)*techMat(E2,P111) + (0)*techMat(E2,P112) + (0)*techMat(E2,P113) + (0)*techMat(E2,P114) + (0)*techMat(E2,P115) + (0)*techMat(E2,P116) + (0)*techMat(E2,P117) + (0)*techMat(E2,P118) + (0)*techMat(E2,P119)
     
      + (0)*techMat(E2,P120) + (0)*techMat(E2,P121) + (0)*techMat(E2,P122) + (0)*techMat(E2,P123) + (0)*techMat(E2,P124) + (0)*techMat(E2,P125) + (0)*techMat(E2,P126) + (0)*techMat(E2,P127) + (0)*techMat(E2,P128) + (0)*techMat(E2,P129)
     
      + (0)*techMat(E2,P130) + (0)*techMat(E2,P131) + (0)*techMat(E2,P132) + (0)*techMat(E2,P133) + (0)*techMat(E2,P134) + (0)*techMat(E2,P135) + (0)*techMat(E2,P136) + (0)*techMat(E2,P137) + (0)*s(P1) - (0.000252345277453289)*s(P2) + (0)*s(P3)
     
      + (0)*s(P4) + (6.482E-6)*s(P5) + (0)*s(P6) + (0)*s(P7) + (0)*s(P8) + (0)*s(P9) + (0)*s(P10) + (0)*s(P11) + (0)*s(P12) + (0)*s(P13) + (0)*s(P14) + (0)*s(P15) + (0)*s(P16) + (0)*s(P17) + (0)*s(P18) + (0)*s(P19) + (0.001)*s(P20) + (0)*s(P21)
     
      + (0)*s(P22) + (0)*s(P23) + (2.7224E-5)*s(P24) + (0)*s(P25) + (0)*s(P26) + (0)*s(P27) + (0)*s(P28) + (0)*s(P29) + (0)*s(P30) + (0)*s(P31) + (5.8338E-5)*s(P32) + (0)*s(P33) + (0)*s(P34) + (0)*s(P35) + (0)*s(P36) + (0)*s(P37) + (9.5933E-6)*s(P38)
     
      + (0)*s(P39) + (0.001)*s(P40) + (0)*s(P41) + (0)*s(P42) + (0)*s(P43) + (0)*s(P44) + (0)*s(P45) + (0.0829)*s(P46) + (0)*s(P47) + (0)*s(P48) + (0)*s(P49) + (0)*s(P50) + (0)*s(P51) + (0)*s(P52) + (0)*s(P53) + (0.00118109589872716)*s(P54) + (0)*s(P55)
     
      + (0)*s(P56) + (0)*s(P57) + (0)*s(P58) + (0)*s(P59) + (0)*s(P60) + (0)*s(P61) + (0)*s(P62) + (0)*s(P63) + (0)*s(P64) + (0)*s(P65) + (0)*s(P66) + (0)*s(P67) + (0)*s(P68) + (0.00033261)*s(P69) + (0)*s(P70) + (0)*s(P71) + (0)*s(P72) + (0)*s(P73)
     
      + (0)*s(P74) + (0)*s(P75) + (0)*s(P76) + (0)*s(P77) + (0)*s(P78) + (0)*s(P79) + (0)*s(P80) + (0)*s(P81) + (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P87) + (0)*s(P88) + (0)*s(P89) + (0)*s(P90) + (0)*s(P91) + (0)*s(P92)
     
      + (0)*s(P93) + (0)*s(P94) + (0)*s(P95) + (0)*s(P96) + (0)*s(P97) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P103) + (0)*s(P104) + (0)*s(P105) + (0)*s(P106) + (0)*s(P107) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110)
     
      + (0)*s(P111) + (0)*s(P112) + (0)*s(P113) + (0)*s(P114) + (0)*s(P115) - (2.75E-5)*s(P116) + (0)*s(P117) + (0)*s(P118) + (0)*s(P119) + (0)*s(P120) + (0)*s(P121) + (0)*s(P122) + (0)*s(P123) + (0)*s(P124) + (0)*s(P125) + (0)*s(P126) + (0)*s(P127)
     
      + (0)*s(P128) + (0)*s(P129) + (0)*s(P130) + (0)*s(P131) + (0)*s(P132) + (0)*s(P133) + (0)*s(P134) + (0)*s(P135) + (0)*s(P136) + (0)*s(P137) + f(E2) =E= 0 ; (LHS = 0)
     
processLCA(E3)..  (0)*techMat(E3,P1) + (0)*techMat(E3,P2) + (0)*techMat(E3,P3) + (0)*techMat(E3,P4) + (0)*techMat(E3,P5) + (0)*techMat(E3,P6) + (0)*techMat(E3,P7) + (0)*techMat(E3,P8) + (0)*techMat(E3,P9) + (0)*techMat(E3,P10) + (0)*techMat(E3,P11)
     
      + (0)*techMat(E3,P12) + (0)*techMat(E3,P13) + (0)*techMat(E3,P14) + (0)*techMat(E3,P15) + (0)*techMat(E3,P16) + (0)*techMat(E3,P17) + (0)*techMat(E3,P18) + (0)*techMat(E3,P19) + (0)*techMat(E3,P20) + (0)*techMat(E3,P21) + (0)*techMat(E3,P22)
     
      + (0)*techMat(E3,P23) + (0)*techMat(E3,P24) + (0)*techMat(E3,P25) + (0)*techMat(E3,P26) + (0)*techMat(E3,P27) + (0)*techMat(E3,P28) + (0)*techMat(E3,P29) + (0)*techMat(E3,P30) + (0)*techMat(E3,P31) + (0)*techMat(E3,P32) + (0)*techMat(E3,P33)
     
      + (0)*techMat(E3,P34) + (0)*techMat(E3,P35) + (0)*techMat(E3,P36) + (0)*techMat(E3,P37) + (0)*techMat(E3,P38) + (0)*techMat(E3,P39) + (0)*techMat(E3,P40) + (0)*techMat(E3,P41) + (0)*techMat(E3,P42) + (0)*techMat(E3,P43) + (0)*techMat(E3,P44)
     
      + (0)*techMat(E3,P45) + (0)*techMat(E3,P46) + (0)*techMat(E3,P47) + (0)*techMat(E3,P48) + (0)*techMat(E3,P49) + (0)*techMat(E3,P50) + (0)*techMat(E3,P51) + (0)*techMat(E3,P52) + (0)*techMat(E3,P53) + (0)*techMat(E3,P54) + (0)*techMat(E3,P55)
     
      + (0)*techMat(E3,P56) + (0)*techMat(E3,P57) + (0)*techMat(E3,P58) + (0)*techMat(E3,P59) + (0)*techMat(E3,P60) + (0)*techMat(E3,P61) + (0)*techMat(E3,P62) + (0)*techMat(E3,P63) + (0)*techMat(E3,P64) + (0)*techMat(E3,P65) + (0)*techMat(E3,P66)
     
      + (0)*techMat(E3,P67) + (0)*techMat(E3,P68) + (0)*techMat(E3,P69) + (0)*techMat(E3,P70) + (0)*techMat(E3,P71) + (0)*techMat(E3,P72) + (0)*techMat(E3,P73) + (0)*techMat(E3,P74) + (0)*techMat(E3,P75) + (0)*techMat(E3,P76) + (0)*techMat(E3,P77)
     
      + (0)*techMat(E3,P78) + (0)*techMat(E3,P79) + (0)*techMat(E3,P80) + (0)*techMat(E3,P81) + (0)*techMat(E3,P82) + (0)*techMat(E3,P83) + (0)*techMat(E3,P84) + (0)*techMat(E3,P85) + (0)*techMat(E3,P86) + (0)*techMat(E3,P87) + (0)*techMat(E3,P88)
     
      + (0)*techMat(E3,P89) + (0)*techMat(E3,P90) + (0)*techMat(E3,P91) + (0)*techMat(E3,P92) + (0)*techMat(E3,P93) + (0)*techMat(E3,P94) + (0)*techMat(E3,P95) + (0)*techMat(E3,P96) + (0)*techMat(E3,P97) + (0)*techMat(E3,P98) + (0)*techMat(E3,P99)
     
      + (0)*techMat(E3,P100) + (0)*techMat(E3,P101) + (0)*techMat(E3,P102) + (0)*techMat(E3,P103) + (0)*techMat(E3,P104) + (0)*techMat(E3,P105) + (0)*techMat(E3,P106) + (0)*techMat(E3,P107) + (0)*techMat(E3,P108) + (0)*techMat(E3,P109)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 14
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 367


     processLCA  =E=  fundamental equation     
     
      + (0)*techMat(E3,P110) + (0)*techMat(E3,P111) + (0)*techMat(E3,P112) + (0)*techMat(E3,P113) + (0)*techMat(E3,P114) + (0)*techMat(E3,P115) + (0)*techMat(E3,P116) + (0)*techMat(E3,P117) + (0)*techMat(E3,P118) + (0)*techMat(E3,P119)
     
      + (0)*techMat(E3,P120) + (0)*techMat(E3,P121) + (0)*techMat(E3,P122) + (0)*techMat(E3,P123) + (0)*techMat(E3,P124) + (0)*techMat(E3,P125) + (0)*techMat(E3,P126) + (0)*techMat(E3,P127) + (0)*techMat(E3,P128) + (0)*techMat(E3,P129)
     
      + (0)*techMat(E3,P130) + (0)*techMat(E3,P131) + (0)*techMat(E3,P132) + (0)*techMat(E3,P133) + (0)*techMat(E3,P134) + (0)*techMat(E3,P135) + (0)*techMat(E3,P136) + (0)*techMat(E3,P137) + (0)*s(P1) + (0)*s(P2) - (907.18)*s(P3) + (0)*s(P4) + (0)*s(P5)
     
      + (0)*s(P6) + (0)*s(P7) + (0)*s(P8) + (0)*s(P9) + (0)*s(P10) + (0)*s(P11) + (0)*s(P12) + (0)*s(P13) + (0)*s(P14) + (0)*s(P15) + (0)*s(P16) + (0)*s(P17) + (0)*s(P18) + (0)*s(P19) + (0)*s(P20) + (0)*s(P21) + (0)*s(P22) + (0)*s(P23) + (0)*s(P24)
     
      + (0)*s(P25) + (0)*s(P26) + (0)*s(P27) + (0)*s(P28) + (0)*s(P29) + (0)*s(P30) + (0)*s(P31) + (0)*s(P32) + (0)*s(P33) + (0)*s(P34) + (0)*s(P35) + (0)*s(P36) + (0)*s(P37) + (0)*s(P38) + (0)*s(P39) + (0)*s(P40) + (0)*s(P41) + (0)*s(P42) + (0)*s(P43)
     
      + (0)*s(P44) + (0)*s(P45) + (0)*s(P46) + (0)*s(P47) + (0)*s(P48) + (0)*s(P49) + (0)*s(P50) + (0)*s(P51) + (0)*s(P52) + (0)*s(P53) + (0)*s(P54) + (0)*s(P55) + (0)*s(P56) + (0)*s(P57) + (0)*s(P58) + (0)*s(P59) + (0)*s(P60) + (0)*s(P61) + (0)*s(P62)
     
      + (0)*s(P63) + (0)*s(P64) + (0)*s(P65) + (0)*s(P66) + (0)*s(P67) + (0)*s(P68) + (0)*s(P69) + (0)*s(P70) + (0)*s(P71) + (0)*s(P72) + (0)*s(P73) + (0)*s(P74) + (0)*s(P75) + (0)*s(P76) + (0)*s(P77) + (0)*s(P78) + (0)*s(P79) + (0)*s(P80) + (0)*s(P81)
     
      + (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P87) + (0)*s(P88) + (0)*s(P89) + (0)*s(P90) + (0)*s(P91) + (0)*s(P92) + (0)*s(P93) + (0)*s(P94) + (0)*s(P95) + (0)*s(P96) + (0)*s(P97) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100)
     
      + (0)*s(P101) + (0)*s(P102) + (0)*s(P103) + (0)*s(P104) + (0)*s(P105) + (0)*s(P106) + (0)*s(P107) + (907.18)*s(P108) + (907.18)*s(P109) + (907.18)*s(P110) + (907.18)*s(P111) + (907.18)*s(P112) + (0)*s(P113) + (907.18)*s(P114) + (0)*s(P115)
     
      + (0)*s(P116) + (0)*s(P117) + (907.18)*s(P118) + (907.18)*s(P119) + (907.18)*s(P120) + (907.18)*s(P121) + (0)*s(P122) + (0)*s(P123) + (0)*s(P124) + (0)*s(P125) + (0)*s(P126) + (0)*s(P127) + (0)*s(P128) + (0)*s(P129) + (0)*s(P130) + (0)*s(P131)
     
      + (0)*s(P132) + (0)*s(P133) + (0)*s(P134) + (0)*s(P135) + (0)*s(P136) + (0)*s(P137) + f(E3) =E= 0 ; (LHS = 0)
     
REMAINING 128 ENTRIES SKIPPED


---- zeroIntermediates  =E=  

zeroIntermediates(E1)..  f(E1) =E= 0 ; (LHS = 0)
     
zeroIntermediates(E2)..  f(E2) =E= 0 ; (LHS = 0)
     
zeroIntermediates(E3)..  f(E3) =E= 0 ; (LHS = 0)
     
REMAINING 105 ENTRIES SKIPPED


---- homeDemand  =E=  home demand constraint

homeDemand(P87)..  (0)*techMat(E84,P87) + (0)*techMat(E85,P87) + (0)*techMat(E86,P87) + (0)*techMat(E87,P87) + (0)*techMat(E88,P87) + (0)*techMat(E127,P87) + (22072)*s(P87) =E= 3878 ; (LHS = 0, INFES = 3878 ****)
     

---- stockEqns  =E=  percent stock constraint

stockEqns..  (0)*techMat(E97,P87) - s(P82) - s(P83) - s(P84) - s(P85) - s(P86) + (1.1347)*s(P87) - s(P132) =E= 0 ; (LHS = 0)
     

---- eqs1  =E=  

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 15
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 367


     eqs1  =E=  

eqs1..  (0)*techMat(E92,P92) + (0)*techMat(E97,P92) + (0.1765)*s(P82) + (1)*s(P83) + (1)*s(P84) + (1)*s(P85) + (1)*s(P86) + (1)*s(P132) =E= 0 ; (LHS = 0)
     

---- eqs2  =E=  

eqs2..  (0)*techMat(E93,P92) + (0)*techMat(E97,P92) + (1)*s(P82) + (0.1765)*s(P83) + (1)*s(P84) + (1)*s(P85) + (1)*s(P86) + (1)*s(P132) =E= 0 ; (LHS = 0)
     

---- eqs3  =E=  

eqs3..  (0)*techMat(E94,P92) + (0)*techMat(E97,P92) + (1)*s(P82) + (1)*s(P83) + (0.1765)*s(P84) + (1)*s(P85) + (1)*s(P86) + (1)*s(P132) =E= 0 ; (LHS = 0)
     

---- eqs4  =E=  

eqs4..  (0)*techMat(E95,P92) + (0)*techMat(E97,P92) + (1)*s(P82) + (1)*s(P83) + (1)*s(P84) + (0.1765)*s(P85) + (1)*s(P86) + (1)*s(P132) =E= 0 ; (LHS = 0)
     

---- eqs5  =E=  

eqs5..  (0)*techMat(E96,P92) + (0)*techMat(E97,P92) + (1)*s(P82) + (1)*s(P83) + (1)*s(P84) + (1)*s(P85) + (0.1765)*s(P86) + (1)*s(P132) =E= 0 ; (LHS = 0)
     

---- eqs6  =E=  

eqs6..  (0)*techMat(E97,P92) + (0)*techMat(E128,P92) + (1)*s(P82) + (1)*s(P83) + (1)*s(P84) + (1)*s(P85) + (1)*s(P86) + (0.1765)*s(P132) =E= 0 ; (LHS = 0)
     

---- eqs7  =E=  

eqs7..  (0)*techMat(E97,P92) - (4.1175)*s(P92) + 907.18*s(P106) =E= 0 ; (LHS = 0)
     

---- eqnPchoiceitems  =E=  

eqnPchoiceitems(E84)..  (0)*techMat(E84,P87) + (20)*s(P87) + pchoiceitems(E84) =E= 0 ; (LHS = 0)
     
eqnPchoiceitems(E85)..  (0)*techMat(E85,P87) + (30)*s(P87) + pchoiceitems(E85) =E= 0 ; (LHS = 0)
     
eqnPchoiceitems(E86)..  (0)*techMat(E86,P87) + (20)*s(P87) + pchoiceitems(E86) =E= 0 ; (LHS = 0)
     
REMAINING 3 ENTRIES SKIPPED


---- costInput  =E=  

costInput..  - 909.090909090909*techMat(E92,P92) - 1000*techMat(E93,P92) - 1090.90909090909*techMat(E94,P92) - 1252.52525252525*techMat(E95,P92) - 2525.25252525253*techMat(E96,P92) - 449.49494949495*techMat(E128,P92) + normalizedcostInput =E= 0 ;
     
      (LHS = -7227.27272727273, INFES = 7227.27272727273 ****)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 16
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 367


---- pdtcost  =E=  

pdtcost..  (0)*s(P77) + (0)*s(P78) + (0)*s(P79) + (0)*s(P80) + (0)*s(P81) - 0.05*s(P82) - 0.05*s(P83) - 0.05*s(P84) - 0.05*s(P85) - 0.05*s(P86) - (0.05)*s(P132) + (0)*normalizedcostInput + productionCostResin =E= 0 ; (LHS = 0)
     

---- eql1  =E=  

eql1..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P132) + (0)*s(P136) =E= 0 ; (LHS = 0)
     

---- eql2  =E=  

eql2..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P132) + (0)*s(P136) =E= 0 ; (LHS = 0)
     

---- eql3  =E=  

eql3..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P132) + (0)*s(P136) =E= 0 ; (LHS = 0)
     

---- eql4  =E=  

eql4..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P132) + (0)*s(P136) =E= 0 ; (LHS = 0)
     

---- eql5  =E=  

eql5..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P132) + (0)*s(P136) =E= 0 ; (LHS = 0)
     

---- eql6  =E=  

eql6..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P132) + (0)*s(P136) =E= 0 ; (LHS = 0)
     

---- eql7  =E=  

eql7..  - 5*s(P98) - 5*s(P99) - 5*s(P100) - 5*s(P101) - 5*s(P102) + s(P103) - 5*s(P136) =E= 0 ; (LHS = 0)
     

---- loss_l  =E=  

loss_l..  - 907.18*s(P98) - 907.18*s(P99) - 907.18*s(P100) - 907.18*s(P101) - 907.18*s(P102) - 907.18*s(P136) + lossLandfill =E= 0 ; (LHS = 0)
     

---- eqi1  =E=  

eqi1..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P132) + (0)*s(P137) =E= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 17
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 367


---- eqi2  =E=  

eqi2..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P132) + (0)*s(P137) =E= 0 ; (LHS = 0)
     

---- eqi3  =E=  

eqi3..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P132) + (0)*s(P137) =E= 0 ; (LHS = 0)
     

---- eqi4  =E=  

eqi4..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P132) + (0)*s(P137) =E= 0 ; (LHS = 0)
     

---- eqi5  =E=  

eqi5..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P132) + (0)*s(P137) =E= 0 ; (LHS = 0)
     

---- eqi6  =E=  

eqi6..  (0)*s(P32) + (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P132) + (0)*s(P137) =E= 0 ; (LHS = 0)
     

---- eqi7  =E=  

eqi7..  - 5*s(P108) - 5*s(P109) - 5*s(P110) - 5*s(P111) - 5*s(P112) + s(P114) - 5*s(P137) =E= 0 ; (LHS = 0)
     

---- loss_i  =E=  

loss_i..  (0)*techMat(E107,P108) + (0)*techMat(E107,P109) + (0)*techMat(E107,P110) + (0)*techMat(E107,P111) + (0)*techMat(E107,P112) + (0)*techMat(E107,P118) + (0)*techMat(E107,P119) + (0)*techMat(E107,P120) + (0)*techMat(E107,P121)
     
      + (0)*techMat(E107,P137) - (696.670644961112)*s(P108) - (716.842044255556)*s(P109) - (732.080316307408)*s(P110) - (843.205081122581)*s(P111) - (875.4484402368)*s(P112) - (696.670644961112)*s(P118) - (716.842044255556)*s(P119)
     
      - (732.080316307408)*s(P120) - (843.205081122581)*s(P121) - (1562.84349558052)*s(P137) + lossIncineration =E= 0 ; (LHS = 0)
     

---- loss_b  =E=  

loss_b..  (0)*techMat(E91,P115) + (0)*s(P115) + 0.041*s(P116) + (0)*s(P122) + (0)*s(P123) + (0)*s(P124) + (0)*s(P125) + (0)*normalizedcostInput + (0)*lossBioFuel =E= 0 ; (LHS = 0)
     

---- cost_c  =E=  

cost_c..  - 27.38141394*s(P104) - 27.38141394*s(P105) - 27.38141394*s(P117) + costBenifitCompost =E= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 18
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 367


---- cc2  =E=  

cc2..  - 1240*s(P104) - 2500*s(P105) + cbc2 =E= 0 ; (LHS = 0)
     

---- loss_c  =E=  

loss_c..  (0)*s(P104) + (0)*s(P105) + (0)*s(P117) + (0)*costBenifitCompost + (0)*lossCompost =E= 0 ; (LHS = 0)
     

---- DoC_obj  =E=  

DoC_obj..  (0)*productionCostResin - costBenifitCompost + (0)*DoC - (1)*costRecycled - costIn - costPy - costCl - costLu =E= 0 ; (LHS = 0)
     

---- Cost_obj  =E=  

Cost_obj..  - 0.0496*s(P1) - 0.01624*s(P2) - 0.1766*s(P7) - 0.559977*s(P12) - 0.12996*s(P14) - 0.067*s(P17) - 0.37725*s(P18) - 0.067*s(P21) - 0.0287605*s(P26) - 0.1766*s(P39) - 110.2293*s(P42) - 0.12*s(P49) - 80*s(P52) - 0.13227*s(P57) - 0.022046*s(P58)
     
      - 0.020923*s(P59) - 3.0442E-8*s(P76) + costBenifitCompost + Cost =E= 0 ; (LHS = 0)
     

---- Cost_obj1  =E=  

Cost_obj1..  0.11*pchoiceitems(E84) + 0.18*pchoiceitems(E85) + 0.6*pchoiceitems(E86) + 0.14*pchoiceitems(E87) + 0.1*pchoiceitems(E88) + CostBag =E= 0 ; (LHS = 0)
     

---- costRecycled1  =E=  

costRecycled1..  - 0.495*s(P93) - 0.5445*s(P94) - 0.594*s(P95) - 0.186*s(P96) - 0.43877*s(P135) + 0.90718*costRecycled =E= 0 ; (LHS = 0)
     

---- costIn1  =E=  

costIn1..  (0)*techMat(E107,P108) + (0)*techMat(E107,P109) + (0)*techMat(E107,P110) + (0)*techMat(E107,P111) + (0)*techMat(E107,P112) + (0)*techMat(E107,P118) + (0)*techMat(E107,P119) + (0)*techMat(E107,P120) + (0)*techMat(E107,P121)
     
      + (0)*techMat(E107,P137) - (208.843249999999)*s(P108) - (207.714649999999)*s(P109) - (208.456599999999)*s(P110) - (87.4455999999997)*s(P111) - (87.4455999999997)*s(P112) - (208.843249999999)*s(P118) - (207.714649999999)*s(P119)
     
      - (208.456599999999)*s(P120) - (87.4455999999997)*s(P121) - (123.376666666667)*s(P137) + costIn =E= 0 ; (LHS = 0)
     

---- costPy1  =E=  

costPy1..  - 0.041*s(P116) + costPy =E= 0 ; (LHS = 0)
     

---- costCl1  =E=  

costCl1..  - 0.034*s(P129) + costCl =E= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 19
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 367


---- costLu1  =E=  

costLu1..  - 0.036*s(P130) + costLu =E= 0 ; (LHS = 0)
     

---- totmassproduced  =E=  

totmassproduced(P82)..  - s(P82) + (0)*pchoicemass(P82) + (0)*totpdtmass =E= 0 ; (LHS = 0)
     
totmassproduced(P83)..  - s(P83) + (0)*pchoicemass(P83) + (0)*totpdtmass =E= 0 ; (LHS = 0)
     
totmassproduced(P84)..  - s(P84) + (0)*pchoicemass(P84) + (0)*totpdtmass =E= 0 ; (LHS = 0)
     
REMAINING 3 ENTRIES SKIPPED


---- eqtotpdtmass  =E=  

eqtotpdtmass..  - s(P82) - s(P83) - s(P84) - s(P85) - s(P86) - s(P132) + totpdtmass =E= 0 ; (LHS = 0)
     

---- eqw1  =E=  

eqw1..  (0)*techMat(E97,P92) - (0.8235)*s(P92) + wasteMgmtValues(Reprocess) =E= 0 ; (LHS = 0)
     

---- eqw2  =E=  

eqw2..  (0)*techMat(E91,P115) + (0)*techMat(E97,P115) - (0.138916666666667)*s(P115) + wasteMgmtValues(Pyrolysis) =E= 0 ; (LHS = 0)
     

---- eqw3  =E=  

eqw3..  (0)*techMat(E97,P98) + (0)*techMat(E97,P99) + (0)*techMat(E97,P100) + (0)*techMat(E97,P101) + (0)*techMat(E97,P102) + (0)*techMat(E97,P136) - (857.18)*s(P98) - (857.18)*s(P99) - (857.18)*s(P100) - (857.18)*s(P101) - (857.18)*s(P102)
     
      - 907.18*s(P113) + 45*s(P114) - (877.18)*s(P136) + wasteMgmtValues(Landfill) =E= 0 ; (LHS = 0)
     

---- eqw4  =E=  

eqw4..  (0)*techMat(E97,P108) + (0)*techMat(E97,P109) + (0)*techMat(E97,P110) + (0)*techMat(E97,P111) + (0)*techMat(E97,P112) + (0)*techMat(E97,P118) + (0)*techMat(E97,P119) + (0)*techMat(E97,P120) + (0)*techMat(E97,P121) + (0)*techMat(E97,P137)
     
      - (897.18)*s(P108) - (897.18)*s(P109) - (897.18)*s(P110) - (897.18)*s(P111) - (897.18)*s(P112) - (897.18)*s(P118) - (897.18)*s(P119) - (897.18)*s(P120) - (897.18)*s(P121) - (1754.36)*s(P137) + wasteMgmtValues(Incineration) =E= 0 ; (LHS = 0)
     

---- impactValues  =E=  

impactValues(I1)..  0.73*s(P12) + g(I1) =E= 0 ; (LHS = 0)
     
impactValues(I2)..  g(I2) =E= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 20
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 367


     impactValues  =E=  

impactValues(I3)..  - 0.167*s(P42) - 0.454*s(P46) + g(I3) =E= 0 ; (LHS = 0)
     
REMAINING 2910 ENTRIES SKIPPED


---- eqMPI  =E=  

eqMPI(MPI1)..  - 0.006*g(I3) - 3.451*g(I10) - 3.451*g(I30) - 0.006*g(I40) - 0.205*g(I105) - 7.045*g(I139) - 3.451*g(I172) - 0.006*g(I192) - 3.451*g(I212) - 7.045*g(I236) - 0.205*g(I388) - 0.205*g(I389) - 0.205*g(I631) - 0.006*g(I708) - 7.045*g(I712)
     
      - 7.045*g(I742) - 7.045*g(I839) - 0.205*g(I890) - 3.451*g(I895) - 7.045*g(I1016) - 0.205*g(I1023) - 3.451*g(I1059) - 7.045*g(I1137) - 7.045*g(I1227) - 7.045*g(I1293) - 3.451*g(I1304) - 0.006*g(I1415) - 3.451*g(I1454) - 0.001*g(I1458)
     
      - 0.205*g(I1471) - 3.451*g(I1491) - 0.001*g(I1493) - 0.006*g(I1512) - 3.451*g(I1557) - 0.205*g(I1596) - 7.045*g(I1678) - 7.045*g(I1724) - 7.045*g(I1730) - 0.205*g(I1868) - 0.006*g(I1883) - 0.205*g(I1922) - 7.045*g(I1929) - 3.451*g(I2056)
     
      - 0.205*g(I2193) - 0.205*g(I2235) - 7.045*g(I2303) - 0.006*g(I2314) - 7.045*g(I2518) - 3.451*g(I2552) - 7.045*g(I2649) - 7.045*g(I2661) - 7.045*g(I2711) - 0.205*g(I2731) - 3.451*g(I2733) - 0.006*g(I2756) - 3.451*g(I2852) - 3.451*g(I2854)
     
      + mp_indicators(MPI1) =E= 0 ; (LHS = 0)
     
eqMPI(MPI2)..  - 0.008*g(I101) - 0.631*g(I108) - 0.631*g(I124) - 0.631*g(I163) - 0.631*g(I277) - 0.631*g(I372) - 0.631*g(I384) - 0.008*g(I411) - 0.008*g(I509) - 0.631*g(I572) - 0.631*g(I593) - 0.008*g(I604) - 0.631*g(I624) - 0.631*g(I640) - 0.631*g(I692)
     
      - 0.008*g(I705) - 0.008*g(I720) - 0.008*g(I752) - 0.631*g(I758) - 0.008*g(I856) - 0.631*g(I913) - 0.008*g(I986) - 0.631*g(I994) - 0.008*g(I1051) - 0.631*g(I1118) - 0.631*g(I1208) - 0.008*g(I1236) - 0.008*g(I1257) - 0.008*g(I1349) - 0.008*g(I1679)
     
      - 0.631*g(I1709) - 0.008*g(I1760) - 0.008*g(I1860) - 0.008*g(I1944) - 0.631*g(I1966) - 0.631*g(I1984) - 0.631*g(I2037) - 0.631*g(I2063) - 0.631*g(I2083) - 0.008*g(I2093) - 0.631*g(I2199) - 0.008*g(I2201) - 0.631*g(I2226) - 0.008*g(I2229)
     
      - 0.008*g(I2237) - 0.631*g(I2290) - 0.008*g(I2293) - 0.008*g(I2310) - 0.008*g(I2464) - 0.008*g(I2474) - 0.631*g(I2503) - 0.631*g(I2583) - 0.631*g(I2663) - 0.631*g(I2664) - 0.631*g(I2685) - 0.631*g(I2746) - 0.631*g(I2791) - 0.008*g(I2862)
     
      + mp_indicators(MPI2) =E= 0 ; (LHS = 0)
     
eqMPI(MPI3)..  - 0.003*g(I3) - 0.218*g(I10) - 0.218*g(I30) - 0.003*g(I40) - 0.003*g(I162) - 0.218*g(I172) - 0.003*g(I176) - 0.003*g(I185) - 0.003*g(I192) - 0.218*g(I212) - 0.003*g(I342) - 0.003*g(I668) - 0.003*g(I671) - 0.003*g(I708) - 0.003*g(I790)
     
      - 0.003*g(I858) - 0.218*g(I895) - 0.003*g(I1029) - 0.218*g(I1059) - 0.003*g(I1132) - 0.003*g(I1230) - 0.218*g(I1304) - 0.003*g(I1415) - 0.003*g(I1440) - 0.003*g(I1444) - 0.218*g(I1454) - 0.218*g(I1491) - 0.003*g(I1512) - 0.003*g(I1546)
     
      - 0.003*g(I1552) - 0.218*g(I1557) - 0.003*g(I1844) - 0.003*g(I1883) - 0.003*g(I1964) - 0.003*g(I2038) - 0.218*g(I2056) - 0.003*g(I2068) - 0.003*g(I2078) - 0.003*g(I2118) - 0.003*g(I2179) - 0.003*g(I2314) - 0.003*g(I2385) - 0.218*g(I2552)
     
      - 0.218*g(I2733) - 0.003*g(I2756) - 0.218*g(I2852) - 0.218*g(I2854) + mp_indicators(MPI3) =E= 0 ; (LHS = 0)
     
REMAINING 7 ENTRIES SKIPPED


---- eq_gwp  =E=  

eq_gwp..  - mp_indicators(MPI4) + gwp =E= 0 ; (LHS = 0)
     

---- addCons1  =E=  

                NONE

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 21
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 367


---- addCons2  =E=  

addCons2..  Cost + slack2 =E= 1.8227 ; (LHS = 0, INFES = 1.8227 ****)
     

---- addCons3  =G=  

                NONE


---- eps1  =E=  

eps1..  - DoC + EPS*slack1 + EPS*slack2 + epsObj =E= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 22
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 367


---- techMat  

techMat(E1,P1)
                (.LO, .L, .UP, .M = 1, 1, 1, 0)
       (0)      processLCA(E1)

techMat(E1,P2)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       (0)      processLCA(E1)

techMat(E1,P3)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       (0)      processLCA(E1)

REMAINING 17944 ENTRIES SKIPPED

---- s  scaling factors

s(P1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
      (-1)      processLCA(E1)
       (0)      processLCA(E2)
       (0)      processLCA(E3)
       (0)      processLCA(E4)
       (0)      processLCA(E5)
       (0)      processLCA(E6)
       (0)      processLCA(E7)
 (8.3600000E-7) processLCA(E8)
       (0)      processLCA(E9)
       (0.0004) processLCA(E10)
       (0)      processLCA(E11)
       (0)      processLCA(E12)
       (0)      processLCA(E13)
       (0)      processLCA(E14)
       (0)      processLCA(E15)
 (8.7000000E-7) processLCA(E16)
       (0)      processLCA(E17)
       (0)      processLCA(E18)
       (0)      processLCA(E19)
       (0)      processLCA(E20)
       (0.1393) processLCA(E21)
       (0.0002) processLCA(E22)
       (0)      processLCA(E23)
       (0)      processLCA(E24)
       (0)      processLCA(E25)
       (0)      processLCA(E26)
       (0)      processLCA(E27)
       (0)      processLCA(E28)
       (0)      processLCA(E29)
       (0)      processLCA(E30)
       (0)      processLCA(E31)
       (0)      processLCA(E32)
       (0)      processLCA(E33)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 23
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 367


     s  scaling factors

       (0)      processLCA(E34)
       (0)      processLCA(E35)
       (0)      processLCA(E36)
       (0)      processLCA(E37)
       (0)      processLCA(E38)
       (0)      processLCA(E39)
 (8.8000000E-6) processLCA(E40)
       (0)      processLCA(E41)
       (0)      processLCA(E42)
       (0)      processLCA(E43)
       (0)      processLCA(E44)
       (0)      processLCA(E45)
       (0)      processLCA(E46)
       (0)      processLCA(E47)
       (0)      processLCA(E48)
       (0)      processLCA(E49)
       (0)      processLCA(E50)
       (0)      processLCA(E51)
       (0)      processLCA(E52)
       (0)      processLCA(E53)
       (0)      processLCA(E54)
       (0)      processLCA(E55)
       (0)      processLCA(E56)
       (0)      processLCA(E57)
       (0)      processLCA(E58)
       (0)      processLCA(E59)
       (0)      processLCA(E60)
       (0)      processLCA(E61)
       (0)      processLCA(E62)
       (0)      processLCA(E63)
       (0)      processLCA(E64)
       (0)      processLCA(E65)
       (0)      processLCA(E66)
       (0)      processLCA(E67)
       (0)      processLCA(E68)
       (0)      processLCA(E69)
       (0)      processLCA(E70)
       (0)      processLCA(E71)
       (0)      processLCA(E72)
       (0)      processLCA(E73)
       (0)      processLCA(E74)
       (0)      processLCA(E75)
       (0)      processLCA(E76)
       (0)      processLCA(E77)
       (0)      processLCA(E78)
       (0)      processLCA(E79)
       (0)      processLCA(E80)
       (0)      processLCA(E81)
       (0)      processLCA(E82)
       (0)      processLCA(E83)
       (0)      processLCA(E84)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 24
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 367


     s  scaling factors

       (0)      processLCA(E85)
       (0)      processLCA(E86)
       (0)      processLCA(E87)
       (0)      processLCA(E88)
       (0)      processLCA(E89)
       (0)      processLCA(E90)
       (0)      processLCA(E91)
       (0)      processLCA(E92)
       (0)      processLCA(E93)
       (0)      processLCA(E94)
       (0)      processLCA(E95)
       (0)      processLCA(E96)
       (0)      processLCA(E97)
       (0)      processLCA(E98)
       (0)      processLCA(E99)
       (0)      processLCA(E100)
       (0)      processLCA(E101)
       (0)      processLCA(E102)
       (0)      processLCA(E103)
       (0)      processLCA(E104)
       (0)      processLCA(E105)
       (0)      processLCA(E106)
       (0)      processLCA(E107)
       (0)      processLCA(E108)
       (0)      processLCA(E109)
       (0)      processLCA(E110)
       (0)      processLCA(E111)
       (0)      processLCA(E112)
       (0)      processLCA(E113)
       (0)      processLCA(E114)
       (0)      processLCA(E115)
       (0)      processLCA(E116)
       (0)      processLCA(E117)
       (0)      processLCA(E118)
       (0)      processLCA(E119)
       (0)      processLCA(E120)
       (0)      processLCA(E121)
       (0)      processLCA(E122)
       (0)      processLCA(E123)
       (0)      processLCA(E124)
       (0)      processLCA(E125)
       (0)      processLCA(E126)
       (0)      processLCA(E127)
       (0)      processLCA(E128)
       (0)      processLCA(E129)
       (0)      processLCA(E130)
       (0)      processLCA(E131)
       -0.0496  Cost_obj
       -0.004   impactValues(I6)
       -0.002   impactValues(I125)
        1.24    impactValues(I159)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 25
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 367


     s  scaling factors

        0.235   impactValues(I1473)

s(P2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      processLCA(E1)
      (-0.0003) processLCA(E2)
       (0)      processLCA(E3)
       (0)      processLCA(E4)
       (0)      processLCA(E5)
 (1.1492253E-6) processLCA(E6)
       (0)      processLCA(E7)
       (0)      processLCA(E8)
       (0.6522) processLCA(E9)
       (0)      processLCA(E10)
       (0)      processLCA(E11)
       (0)      processLCA(E12)
       (0)      processLCA(E13)
       (0)      processLCA(E14)
       (0)      processLCA(E15)
 (2.7229757E-5) processLCA(E16)
       (0.5152) processLCA(E17)
       (1.0185) processLCA(E18)
       (0)      processLCA(E19)
       (0)      processLCA(E20)
       (0)      processLCA(E21)
       (0.0111) processLCA(E22)
       (0)      processLCA(E23)
       (0)      processLCA(E24)
       (0)      processLCA(E25)
       (0)      processLCA(E26)
       (0)      processLCA(E27)
       (0)      processLCA(E28)
       (0)      processLCA(E29)
       (0)      processLCA(E30)
       (0)      processLCA(E31)
       (0)      processLCA(E32)
       (0)      processLCA(E33)
       (0)      processLCA(E34)
       (0)      processLCA(E35)
       (0)      processLCA(E36)
       (0.001)  processLCA(E37)
       (0.0003) processLCA(E38)
       (0)      processLCA(E39)
       (0)      processLCA(E40)
       (0)      processLCA(E41)
       (0)      processLCA(E42)
       (0)      processLCA(E43)
       (0)      processLCA(E44)
       (0)      processLCA(E45)
       (0)      processLCA(E46)
       (0)      processLCA(E47)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 26
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 367


     s  scaling factors

       (0)      processLCA(E48)
       (0)      processLCA(E49)
       (0)      processLCA(E50)
       (0)      processLCA(E51)
       (0)      processLCA(E52)
       (0)      processLCA(E53)
       (0)      processLCA(E54)
       (0)      processLCA(E55)
       (0)      processLCA(E56)
       (0)      processLCA(E57)
       (0)      processLCA(E58)
       (0)      processLCA(E59)
       (0)      processLCA(E60)
       (0)      processLCA(E61)
       (0)      processLCA(E62)
       (0)      processLCA(E63)
       (0)      processLCA(E64)
       (0)      processLCA(E65)
       (0)      processLCA(E66)
       (0)      processLCA(E67)
       (0)      processLCA(E68)
       (0)      processLCA(E69)
       (0)      processLCA(E70)
       (0)      processLCA(E71)
       (0)      processLCA(E72)
       (0)      processLCA(E73)
       (0)      processLCA(E74)
       (0)      processLCA(E75)
       (0)      processLCA(E76)
       (0)      processLCA(E77)
       (0)      processLCA(E78)
       (0)      processLCA(E79)
       (0)      processLCA(E80)
       (0)      processLCA(E81)
       (0)      processLCA(E82)
       (0)      processLCA(E83)
       (0)      processLCA(E84)
       (0)      processLCA(E85)
       (0)      processLCA(E86)
       (0)      processLCA(E87)
       (0)      processLCA(E88)
       (0)      processLCA(E89)
       (0)      processLCA(E90)
       (0)      processLCA(E91)
       (0)      processLCA(E92)
       (0)      processLCA(E93)
       (0)      processLCA(E94)
       (0)      processLCA(E95)
       (0)      processLCA(E96)
       (0)      processLCA(E97)
       (0)      processLCA(E98)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 27
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 367


     s  scaling factors

       (0)      processLCA(E99)
       (0)      processLCA(E100)
       (0)      processLCA(E101)
       (0)      processLCA(E102)
       (0)      processLCA(E103)
       (0)      processLCA(E104)
       (0)      processLCA(E105)
       (0)      processLCA(E106)
       (0)      processLCA(E107)
       (0)      processLCA(E108)
       (0)      processLCA(E109)
       (0)      processLCA(E110)
       (0)      processLCA(E111)
       (0)      processLCA(E112)
       (0)      processLCA(E113)
       (0)      processLCA(E114)
       (0)      processLCA(E115)
       (0)      processLCA(E116)
       (0)      processLCA(E117)
       (0)      processLCA(E118)
       (0)      processLCA(E119)
       (0)      processLCA(E120)
       (0)      processLCA(E121)
       (0)      processLCA(E122)
       (0)      processLCA(E123)
       (0)      processLCA(E124)
       (0)      processLCA(E125)
       (0)      processLCA(E126)
       (0)      processLCA(E127)
       (0)      processLCA(E128)
       (0)      processLCA(E129)
       (0)      processLCA(E130)
       (0)      processLCA(E131)
       -0.0162  Cost_obj
       -0.001   impactValues(I179)
        0.006   impactValues(I186)
        0.49    impactValues(I190)
        4.409   impactValues(I194)

s(P3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      processLCA(E1)
       (0)      processLCA(E2)
    (-907.18)   processLCA(E3)
       (0)      processLCA(E4)
       (0)      processLCA(E5)
       (0)      processLCA(E6)
       (0)      processLCA(E7)
       (0)      processLCA(E8)
       (0)      processLCA(E9)
       (0)      processLCA(E10)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 28
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 367


     s  scaling factors

       (0)      processLCA(E11)
       (0)      processLCA(E12)
       (0)      processLCA(E13)
       (0)      processLCA(E14)
       (0)      processLCA(E15)
       (0)      processLCA(E16)
       (0)      processLCA(E17)
       (0)      processLCA(E18)
       (0)      processLCA(E19)
       (0)      processLCA(E20)
       (0)      processLCA(E21)
       (0)      processLCA(E22)
       (0)      processLCA(E23)
       (0)      processLCA(E24)
       (0)      processLCA(E25)
       (0)      processLCA(E26)
       (0)      processLCA(E27)
       (0)      processLCA(E28)
       (0)      processLCA(E29)
       (0)      processLCA(E30)
       (0)      processLCA(E31)
     (335.16)   processLCA(E32)
       (0)      processLCA(E33)
       (0)      processLCA(E34)
       (0)      processLCA(E35)
       (0)      processLCA(E36)
       (0)      processLCA(E37)
       (0)      processLCA(E38)
       (0)      processLCA(E39)
       (0)      processLCA(E40)
       (0)      processLCA(E41)
       (0)      processLCA(E42)
       (0)      processLCA(E43)
       (0)      processLCA(E44)
       (0)      processLCA(E45)
       (0)      processLCA(E46)
       (0)      processLCA(E47)
       (0)      processLCA(E48)
       (0)      processLCA(E49)
       (0)      processLCA(E50)
       (0)      processLCA(E51)
       (0)      processLCA(E52)
       (0)      processLCA(E53)
       (0)      processLCA(E54)
       (0)      processLCA(E55)
       (0)      processLCA(E56)
       (0)      processLCA(E57)
       (0)      processLCA(E58)
       (0)      processLCA(E59)
       (0)      processLCA(E60)
       (0)      processLCA(E61)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 29
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 367


     s  scaling factors

       (0)      processLCA(E62)
       (0)      processLCA(E63)
       (0)      processLCA(E64)
       (0)      processLCA(E65)
       (0)      processLCA(E66)
       (0)      processLCA(E67)
       (0)      processLCA(E68)
       (0)      processLCA(E69)
       (0)      processLCA(E70)
       (0)      processLCA(E71)
       (0)      processLCA(E72)
       (0)      processLCA(E73)
       (0)      processLCA(E74)
       (0)      processLCA(E75)
       (0)      processLCA(E76)
       (0)      processLCA(E77)
       (0)      processLCA(E78)
       (0)      processLCA(E79)
       (0)      processLCA(E80)
       (0)      processLCA(E81)
       (0)      processLCA(E82)
       (0)      processLCA(E83)
       (0)      processLCA(E84)
       (0)      processLCA(E85)
       (0)      processLCA(E86)
       (0)      processLCA(E87)
       (0)      processLCA(E88)
       (0)      processLCA(E89)
       (0)      processLCA(E90)
       (0)      processLCA(E91)
       (0)      processLCA(E92)
       (0)      processLCA(E93)
       (0)      processLCA(E94)
       (0)      processLCA(E95)
       (0)      processLCA(E96)
       (0)      processLCA(E97)
       (0)      processLCA(E98)
       (0)      processLCA(E99)
       (0)      processLCA(E100)
       (0)      processLCA(E101)
       (0)      processLCA(E102)
       (0)      processLCA(E103)
       (0)      processLCA(E104)
       (0)      processLCA(E105)
       (0)      processLCA(E106)
       (0)      processLCA(E107)
       (0)      processLCA(E108)
       (0)      processLCA(E109)
       (0)      processLCA(E110)
       (0)      processLCA(E111)
       (0)      processLCA(E112)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 30
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 367


     s  scaling factors

       (0)      processLCA(E113)
       (0)      processLCA(E114)
       (0)      processLCA(E115)
       (0)      processLCA(E116)
       (0)      processLCA(E117)
       (0)      processLCA(E118)
       (0)      processLCA(E119)
       (0)      processLCA(E120)
       (0)      processLCA(E121)
       (0)      processLCA(E122)
       (0)      processLCA(E123)
       (0)      processLCA(E124)
       (0)      processLCA(E125)
       (0)      processLCA(E126)
       (0)      processLCA(E127)
       (0)      processLCA(E128)
       (0)      processLCA(E129)
       (0)      processLCA(E130)
       (0)      processLCA(E131)
       -8.999   impactValues(I7)

REMAINING 134 ENTRIES SKIPPED

---- f  final demand

f(E1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       processLCA(E1)
        1       zeroIntermediates(E1)

f(E2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       processLCA(E2)
        1       zeroIntermediates(E2)

f(E3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       processLCA(E3)
        1       zeroIntermediates(E3)

REMAINING 128 ENTRIES SKIPPED

---- pchoiceitems  

pchoiceitems(E84)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqnPchoiceitems(E84)
        0.11    Cost_obj1

pchoiceitems(E85)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 31
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 367


     pchoiceitems  

        1       eqnPchoiceitems(E85)
        0.18    Cost_obj1

pchoiceitems(E86)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqnPchoiceitems(E86)
        0.6     Cost_obj1

REMAINING 3 ENTRIES SKIPPED

---- normalizedcostInput  

normalizedcostInput
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       costInput
       (0)      pdtcost
       (0)      loss_b


---- productionCostResin  

productionCostResin
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       pdtcost
       (0)      DoC_obj


---- lossLandfill  

lossLandfill
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       loss_l


---- lossIncineration  

lossIncineration
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       loss_i


---- lossBioFuel  

lossBioFuel
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      loss_b

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 32
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 367


---- costBenifitCompost  

costBenifitCompost
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       cost_c
       (0)      loss_c
       -1       DoC_obj
        1       Cost_obj


---- cbc2  

cbc2
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       cc2


---- lossCompost  

lossCompost
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      loss_c


---- DoC  

DoC
                (.LO, .L, .UP, .M = 0, 0, 2, 0)
       (0)      DoC_obj
       -1       eps1


---- Cost  

Cost
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Cost_obj
        1       addCons2


---- CostBag  

CostBag
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Cost_obj1


---- costRecycled  

costRecycled
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
      (-1)      DoC_obj
        0.9072  costRecycled1
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 33
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 367


     costRecycled  



---- costIn  

costIn
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       DoC_obj
        1       costIn1


---- costPy  

costPy
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       DoC_obj
        1       costPy1


---- costCl  

costCl
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       DoC_obj
        1       costCl1


---- costLu  

costLu
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       DoC_obj
        1       costLu1


---- pchoicemass  

pchoicemass(P82)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       (0)      totmassproduced(P82)

pchoicemass(P83)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       (0)      totmassproduced(P83)

pchoicemass(P84)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       (0)      totmassproduced(P84)

REMAINING 3 ENTRIES SKIPPED
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 34
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 367


---- totpdtmass  

totpdtmass
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       (0)      totmassproduced(P82)
       (0)      totmassproduced(P83)
       (0)      totmassproduced(P84)
       (0)      totmassproduced(P85)
       (0)      totmassproduced(P86)
       (0)      totmassproduced(P132)
        1       eqtotpdtmass


---- wasteMgmtValues  

wasteMgmtValues(Reprocess)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqw1

wasteMgmtValues(Pyrolysis)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqw2

wasteMgmtValues(Landfill)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqw3

REMAINING ENTRY SKIPPED

---- g  

g(I1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       impactValues(I1)

g(I2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       impactValues(I2)

g(I3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       impactValues(I3)
       -0.006   eqMPI(MPI1)
       -0.003   eqMPI(MPI3)

REMAINING 2910 ENTRIES SKIPPED

---- mp_indicators  

mp_indicators(MPI1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqMPI(MPI1)

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 35
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 367


     mp_indicators  

mp_indicators(MPI2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqMPI(MPI2)

mp_indicators(MPI3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqMPI(MPI3)

REMAINING 7 ENTRIES SKIPPED

---- gwp  

gwp
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eq_gwp


---- slack1  

slack1
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
           EPS  eps1


---- slack2  

slack2
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       addCons2
           EPS  eps1


---- epsObj  

epsObj
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eps1

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 36
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE ToyProblem Using NLP From line 367


MODEL STATISTICS

BLOCKS OF EQUATIONS          55     SINGLE EQUATIONS        3,221
BLOCKS OF VARIABLES          29     SINGLE VARIABLES       21,175
NON ZERO ELEMENTS        40,737     NON LINEAR N-Z         36,222
DERIVATIVE POOL              20     CONSTANT POOL              34
CODE LENGTH              54,806


GENERATION TIME      =        0.029 SECONDS      9 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.066 SECONDS      9 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 37
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE ToyProblem Using NLP From line 367


               S O L V E      S U M M A R Y

     MODEL   ToyProblem          OBJECTIVE  DoC
     TYPE    NLP                 DIRECTION  MAXIMIZE
     SOLVER  BARON               FROM LINE  367

**** SOLVER STATUS     8 User Interrupt            
**** MODEL STATUS      12 Error Unknown            
**** OBJECTIVE VALUE               NA

 RESOURCE USAGE, LIMIT          0.120       500.000
 ITERATION COUNT, LIMIT        NA    2000000000
 EVALUATION ERRORS              0             0

GAMS/BARON       24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
Parts of the BARON software were created at the
University of Illinois at Urbana-Champaign.

--- Using Option File
Reading parameter(s) from "/home/psegroup_1/Data/GAMS_Codes/LCD-Plastics/Workspace/Codes/baron.opt"
>>  DoLocal 0
>>  *NumLoc 0
Finished reading from "/home/psegroup_1/Data/GAMS_Codes/LCD-Plastics/Workspace/Codes/baron.opt"
*** no solution found

===========================================================================
 BARON version 16.8.24. Built: LNX-64 Wed Aug 24 08:52:24 EDT 2016

 If you use this software, please cite:
 Tawarmalani, M. and N. V. Sahinidis, A polyhedral
 branch-and-cut approach to global optimization,
 Mathematical Programming, 103(2), 225-249, 2005.

 BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
 Parts of the BARON software were created at the
 University of Illinois at Urbana-Champaign.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP: ILOG CPLEX                                      
 For NLP: MINOS, SNOPT, GAMS external NLP, IPOPT, FILTERSD
===========================================================================
*** Could not extract solution on /home/psegroup_1/Data/GAMS_Codes/LCD-Plastics/Workspace/Codes/225a/res.dat file

No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 38
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE ToyProblem Using NLP From line 367


**** SOLVER STATUS FILE LISTED BELOW
=0GAMS/BARON       24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      
=C
=CGAMS/BARON       24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      
=C
=CBARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
=CParts of the BARON software were created at the
=CUniversity of Illinois at Urbana-Champaign.
=C
=C--- Using Option File
=CReading parameter(s) from "/home/psegroup_1/Data/GAMS_Codes/LCD-Plastics/Workspace/Codes/baron.opt"
=C>>  DoLocal 0
=C>>  *NumLoc 0
=CFinished reading from "/home/psegroup_1/Data/GAMS_Codes/LCD-Plastics/Workspace/Codes/baron.opt"
 /home/psegroup_1/Data/GAMS_Codes/LCD-Plastics/Workspace/Codes/225a/sum.dat    = problem    3221 21175 0 39236 -.100000000000E+52 0.100000000000E+52 6 5 -1 -3 -3 0 0.12 0.02   
 skip       = 3221
 skip       = 21175
 skip       = 0
 skip       = 39236
 zlbest     = 1E51
 zub        = -1E51
 barstatus  = 6
 modelstatus= 5
 missingbnd = -1
 itera      = -3
 nodeopt    = -3
 nodememmax = 0
 totaltime  = 0.12
=9_
_2
===========================================================================
 BARON version 16.8.24. Built: LNX-64 Wed Aug 24 08:52:24 EDT 2016

 If you use this software, please cite:
 Tawarmalani, M. and N. V. Sahinidis, A polyhedral
 branch-and-cut approach to global optimization,
 Mathematical Programming, 103(2), 225-249, 2005.

 BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
 Parts of the BARON software were created at the
 University of Illinois at Urbana-Champaign.
_2
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP: ILOG CPLEX                                      
 For NLP: MINOS, SNOPT, GAMS external NLP, IPOPT, FILTERSD
_2
===========================================================================
    The options used in solving the problem are as follows:
       maxtime        =  0.5000E+03
       maxiter        =      -1
       numsol         =       1
       firstfeas      =       0
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 39
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE ToyProblem Using NLP From line 367


       cutoff         =  0.1000E+52
       epsa           =  0.1000E-08
       epsr           =  0.3500E+00
       deltaterm      =       0
       deltaa         =  0.1000E+52
       deltar         =  0.1000E+01
       deltat         = -0.1000E+03
       boxtol         =  0.1000E-07
       isoltol        =  0.1000E-03
       absconfeastol  =  0.1000E-04
       relconfeastol  =  0.0000E+00
       absintfeastol  =  0.1000E-04
       relintfeastol  =  0.0000E+00
       results        =       1
       summary        =       1
       times          =       1
       prtimefreq     =  0.3000E+02
       prfreq         = 1000000
       prlevel        =       1
       numprint       =      -1
       numprintdual   =      -1
       bpint          =  0.5000E+01
       fraint         =  0.7000E+00
       minint         =  0.1000E-01
       lpsol          =       3
       nlpsol         =      -1
       allowminos     =       1
       allowsnopt     =       1
       allowexternal  =       1
       allowipopt     =       1
       allowfiltersd  =       1
       allowfiltersqp =       0
       baronx         =       F
       dolocal        =       0
       numloc         =      -2
       locres         =       0
       pdo            =      -2
       brvarstra      =       0
       brptstra       =       0
       nodesel        =       0
       compiis        =       0
       iisint         =       1
       iisorder       =      -1
       threads        =       1
_2
===========================================================================
 Doing local search
_9=
=C*** no solution found
=C
=C===========================================================================
=C BARON version 16.8.24. Built: LNX-64 Wed Aug 24 08:52:24 EDT 2016
=C
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 40
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE ToyProblem Using NLP From line 367


=C If you use this software, please cite:
=C Tawarmalani, M. and N. V. Sahinidis, A polyhedral
=C branch-and-cut approach to global optimization,
=C Mathematical Programming, 103(2), 225-249, 2005.
=C
=C BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
=C Parts of the BARON software were created at the
=C University of Illinois at Urbana-Champaign.
=C===========================================================================
=C This BARON run may utilize the following subsolver(s)
=C For LP/MIP: ILOG CPLEX                                      
=C For NLP: MINOS, SNOPT, GAMS external NLP, IPOPT, FILTERSD
=C===========================================================================

=C*** Could not extract solution on /home/psegroup_1/Data/GAMS_Codes/LCD-Plastics/Workspace/Codes/225a/res.dat file
**** SOLVER STATUS FILE LISTED ABOVE
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 41
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    424 VARIABLE pchoiceitems.L  

                      ( ALL       0.000 )


----    424 VARIABLE pchoicemass.L  

                      ( ALL       0.000 )


----    424 VARIABLE wasteMgmtValues.L  

                      ( ALL       0.000 )


----    425 VARIABLE DoC.L                 =        0.000  

----    426 VARIABLE Cost.L                =        0.000  

----    427 VARIABLE s.L  scaling factors

                      ( ALL       0.000 )


----    428 VARIABLE g.L  

                      ( ALL       0.000 )


----    429 VARIABLE cbc2.L                =        0.000  
            VARIABLE costBenifitCompost.L  =        0.000  
            VARIABLE lossCompost.L         =        0.000  
            VARIABLE lossIncineration.L    =        0.000  
            VARIABLE lossBioFuel.L         =        0.000  
            VARIABLE lossLandfill.L        =        0.000  

----    430 VARIABLE productionCostResin.L =        0.000  

----    431 VARIABLE mp_indicators.L  

                      ( ALL       0.000 )

**** Exec Error at line 463: division by zero (0)
**** Exec Error at line 464: division by zero (0)
**** Exec Error at line 468: division by zero (0)
**** Exec Error at line 469: division by zero (0)
**** Exec Error at line 471: division by zero (0)
**** Exec Error at line 472: division by zero (0)
**** Exec Error at line 476: division by zero (0)
**** Exec Error at line 477: division by zero (0)

----    523 PARAMETER recyclevalLDPE       =        0.000  
            PARAMETER recyclevalHDPE       =        0.000  
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     08/11/20 23:06:55 Page 42
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


            PARAMETER recyclevalPP         =        0.000  
            PARAMETER recyclevalPLA        =        0.000  

----    542 VARIABLE cD.L  

                      Pyrolysis    Landfill  Incinerat~  Segregati~

Curbside Collection        UNDF        UNDF        UNDF        UNDF
Dropoff                    UNDF        UNDF        UNDF        UNDF


**** REPORT FILE SUMMARY

pareto /home/psegroup_1/Data/GAMS_Codes/LCD-Plastics/Workspace/Codes/paretov.txt


EXECUTION TIME       =        0.015 SECONDS      5 MB  24.7.4 r58773 LEX-LEG


USER: Bhavik Bakshi, Single User License             G160607:0939AO-LNX
      The Ohio State University, Chemical and Biomolecular EnginDC12543
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /home/psegroup_1/Data/GAMS_Codes/LCD-Plastics/Workspace/Codes/rp4.gms
Output     /home/psegroup_1/Data/GAMS_Codes/LCD-Plastics/Workspace/Codes/rp4.lst

**** USER ERROR(S) ENCOUNTERED
